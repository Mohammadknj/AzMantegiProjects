
AVRASM ver. 2.1.30  C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\ADC\Debug\List\adc.asm Tue Apr 01 02:04:25 2025

C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\ADC\Debug\List\adc.asm(1088): warning: Register r4 already defined by the .DEF directive
C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\ADC\Debug\List\adc.asm(1089): warning: Register r5 already defined by the .DEF directive
C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\ADC\Debug\List\adc.asm(1090): warning: Register r7 already defined by the .DEF directive
C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\ADC\Debug\List\adc.asm(1091): warning: Register r6 already defined by the .DEF directive
C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\ADC\Debug\List\adc.asm(1092): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _temp=R4
                 	.DEF _temp_msb=R5
                 	.DEF __lcd_x=R7
                 	.DEF __lcd_y=R6
                 	.DEF __lcd_maxx=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0045 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00002a 0000      	.DB  0x0,0x0
                 
                 _0x0:
00002b 6574
00002c 706d
00002d 3d20
00002e 2520      	.DB  0x74,0x65,0x6D,0x70,0x20,0x3D,0x20,0x25
00002f 322e
000030 0064      	.DB  0x2E,0x32,0x64,0x0
                 _0x2000000:
000031 4e2d
000032 4e41
C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\ADC\Debug\List\adc.asm(1131): warning: .cseg .db misalignment - padding zero byte
000033 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2020003:
000034 c080      	.DB  0x80,0xC0
                 _0x20A0060:
C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\ADC\Debug\List\adc.asm(1135): warning: .cseg .db misalignment - padding zero byte
000035 0001      	.DB  0x1
                 _0x20A0000:
000036 4e2d
000037 4e41
000038 4900
000039 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\ADC\Debug\List\adc.asm(1138): warning: .cseg .db misalignment - padding zero byte
00003a 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00003b 0002      	.DW  0x02
00003c 0004      	.DW  0x04
00003d 0054      	.DW  __REG_VARS*2
                 
00003e 0002      	.DW  0x02
00003f 016a      	.DW  __base_y_G101
000040 0068      	.DW  _0x2020003*2
                 
000041 0001      	.DW  0x01
000042 016e      	.DW  __seed_G105
000043 006a      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
000044 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000045 94f8      	CLI
000046 27ee      	CLR  R30
000047 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000048 e0f1      	LDI  R31,1
000049 bffb      	OUT  GICR,R31
00004a bfeb      	OUT  GICR,R30
00004b bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00004c e08d      	LDI  R24,(14-2)+1
00004d e0a2      	LDI  R26,2
00004e 27bb      	CLR  R27
                 __CLEAR_REG:
00004f 93ed      	ST   X+,R30
000050 958a      	DEC  R24
000051 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000052 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000053 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000054 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000055 93ed      	ST   X+,R30
000056 9701      	SBIW R24,1
000057 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000058 e7e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000059 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005a 9185      	LPM  R24,Z+
00005b 9195      	LPM  R25,Z+
00005c 9700      	SBIW R24,0
00005d f061      	BREQ __GLOBAL_INI_END
00005e 91a5      	LPM  R26,Z+
00005f 91b5      	LPM  R27,Z+
000060 9005      	LPM  R0,Z+
000061 9015      	LPM  R1,Z+
000062 01bf      	MOVW R22,R30
000063 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000064 9005      	LPM  R0,Z+
000065 920d      	ST   X+,R0
000066 9701      	SBIW R24,1
000067 f7e1      	BRNE __GLOBAL_INI_LOOP
000068 01fb      	MOVW R30,R22
000069 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006a e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006b bfed      	OUT  SPL,R30
00006c e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006d bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00006e e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00006f e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000070 940c 0080 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;// Alphanumeric LCD functions
                 ;#include <alcd.h>
                 ;
                 ;// Declare your global variables here
                 ;
                 ;// Voltage Reference: AREF pin
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
                 ;
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 000F {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0010 ADMUX=adc_input | ADC_VREF_TYPE;
000072 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
000073 81e8      	LD   R30,Y
000074 b9e7      	OUT  0x7,R30
                 ; 0000 0011 // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 0012 delay_us(10);
                +
000075 e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
000076 958a     +DEC R24
000077 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
                 ; 0000 0013 // Start the AD conversion
                 ; 0000 0014 ADCSRA|=(1<<ADSC);
000078 9a36      	SBI  0x6,6
                 ; 0000 0015 // Wait for the AD conversion to complete
                 ; 0000 0016 while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
000079 9b34      	SBIS 0x6,4
00007a cffe      	RJMP _0x3
                 ; 0000 0017 ADCSRA|=(1<<ADIF);
00007b 9a34      	SBI  0x6,4
                 ; 0000 0018 return ADCW;
00007c b1e4      	IN   R30,0x4
00007d b1f5      	IN   R31,0x4+1
00007e 940c 049a 	JMP  _0x20C0004
                 ; 0000 0019 }
                 ; .FEND
                 ;int temp = 0;
                 ;char st[10];
                 ;void main(void)
                 ; 0000 001D {
                 _main:
                 ; .FSTART _main
                 ; 0000 001E 
                 ; 0000 001F // ADC initialization
                 ; 0000 0020 // ADC Clock frequency: 500.000 kHz
                 ; 0000 0021 // ADC Voltage Reference: AREF pin
                 ; 0000 0022 // ADC Auto Trigger Source: ADC Stopped
                 ; 0000 0023 ADMUX=ADC_VREF_TYPE;
000080 e0e0      	LDI  R30,LOW(0)
000081 b9e7      	OUT  0x7,R30
                 ; 0000 0024 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (1<<ADPS0);
000082 e8e1      	LDI  R30,LOW(129)
000083 b9e6      	OUT  0x6,R30
                 ; 0000 0025 SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
000084 e0e0      	LDI  R30,LOW(0)
000085 bfe0      	OUT  0x30,R30
                 ; 0000 0026 lcd_init(16);
000086 e1a0      	LDI  R26,LOW(16)
000087 940e 046f 	CALL _lcd_init
                 ; 0000 0027 while (1)
                 _0x6:
                 ; 0000 0028       {
                 ; 0000 0029       temp = read_adc(3);
000089 e0a3      	LDI  R26,LOW(3)
00008a dfe7      	RCALL _read_adc
00008b 012f      	MOVW R4,R30
                 ; 0000 002A       temp = temp/2.05;
00008c 940e 05a5 	CALL SUBOPT_0x0
00008e 01df      	MOVW R26,R30
00008f 01cb      	MOVW R24,R22
                +
000090 e3e3     +LDI R30 , LOW ( 0x40033333 )
000091 e3f3     +LDI R31 , HIGH ( 0x40033333 )
000092 e063     +LDI R22 , BYTE3 ( 0x40033333 )
000093 e470     +LDI R23 , BYTE4 ( 0x40033333 )
                 	__GETD1N 0x40033333
000094 940e 07f9 	CALL __DIVF21
000096 940e 06ea 	CALL __CFD1
000098 012f      	MOVW R4,R30
                 ; 0000 002B       sprintf(st, "temp = %.2d",temp);
000099 e6e0      	LDI  R30,LOW(_st)
00009a e0f1      	LDI  R31,HIGH(_st)
00009b 93fa      	ST   -Y,R31
00009c 93ea      	ST   -Y,R30
                +
00009d e5e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00009e e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00009f 93fa      	ST   -Y,R31
0000a0 93ea      	ST   -Y,R30
0000a1 01f2      	MOVW R30,R4
0000a2 940e 0870 	CALL __CWD1
0000a4 940e 08e2 	CALL __PUTPARD1
0000a6 e084      	LDI  R24,4
0000a7 940e 03dc 	CALL _sprintf
0000a9 9628      	ADIW R28,8
                 ; 0000 002C       lcd_clear();
0000aa 940e 043d 	CALL _lcd_clear
                 ; 0000 002D       lcd_puts(st);
0000ac e6a0      	LDI  R26,LOW(_st)
0000ad e0b1      	LDI  R27,HIGH(_st)
0000ae 940e 045e 	CALL _lcd_puts
                 ; 0000 002E       delay_ms(200);
0000b0 eca8      	LDI  R26,LOW(200)
0000b1 e0b0      	LDI  R27,0
0000b2 940e 06ab 	CALL _delay_ms
                 ; 0000 002F       }
0000b4 cfd4      	RJMP _0x6
                 ; 0000 0030 }
                 _0x9:
0000b5 cfff      	RJMP _0x9
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0000b6 93ba      	ST   -Y,R27
0000b7 93aa      	ST   -Y,R26
0000b8 931a      	ST   -Y,R17
0000b9 930a      	ST   -Y,R16
0000ba 81aa      	LDD  R26,Y+2
0000bb 81bb      	LDD  R27,Y+2+1
0000bc 9612      	ADIW R26,2
0000bd 940e 08c9 	CALL __GETW1P
0000bf 9730      	SBIW R30,0
0000c0 f129      	BREQ _0x2000010
0000c1 81aa      	LDD  R26,Y+2
0000c2 81bb      	LDD  R27,Y+2+1
0000c3 9614      	ADIW R26,4
0000c4 940e 08c9 	CALL __GETW1P
0000c6 018f      	MOVW R16,R30
0000c7 9730      	SBIW R30,0
0000c8 f061      	BREQ _0x2000012
                +
0000c9 3002     +CPI R16 , LOW ( 2 )
0000ca e0e0     +LDI R30 , HIGH ( 2 )
0000cb 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0000cc f080      	BRLO _0x2000013
0000cd 01f8      	MOVW R30,R16
0000ce 9731      	SBIW R30,1
0000cf 018f      	MOVW R16,R30
                +
0000d0 81aa     +LDD R26 , Y + 2
0000d1 81bb     +LDD R27 , Y + 2 + 1
0000d2 9614     +ADIW R26 , 4
0000d3 93ed     +ST X + , R30
0000d4 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
0000d5 81aa      	LDD  R26,Y+2
0000d6 81bb      	LDD  R27,Y+2+1
0000d7 9612      	ADIW R26,2
0000d8 940e 05aa 	CALL SUBOPT_0x1
0000da 9731      	SBIW R30,1
0000db 81ac      	LDD  R26,Y+4
0000dc 83a0      	STD  Z+0,R26
                 _0x2000013:
0000dd 81aa      	LDD  R26,Y+2
0000de 81bb      	LDD  R27,Y+2+1
0000df 940e 08c9 	CALL __GETW1P
0000e1 23ff      	TST  R31
0000e2 f012      	BRMI _0x2000014
0000e3 940e 05aa 	CALL SUBOPT_0x1
                 _0x2000014:
0000e5 c006      	RJMP _0x2000015
                 _0x2000010:
0000e6 81aa      	LDD  R26,Y+2
0000e7 81bb      	LDD  R27,Y+2+1
0000e8 efef      	LDI  R30,LOW(65535)
0000e9 efff      	LDI  R31,HIGH(65535)
0000ea 93ed      	ST   X+,R30
0000eb 93fc      	ST   X,R31
                 _0x2000015:
0000ec 8119      	LDD  R17,Y+1
0000ed 8108      	LDD  R16,Y+0
0000ee 9625      	ADIW R28,5
0000ef 9508      	RET
                 ; .FEND
                 __ftoe_G100:
                 ; .FSTART __ftoe_G100
0000f0 940e 05b0 	CALL SUBOPT_0x2
0000f2 e8e0      	LDI  R30,LOW(128)
0000f3 83ea      	STD  Y+2,R30
0000f4 e3ef      	LDI  R30,LOW(63)
0000f5 83eb      	STD  Y+3,R30
0000f6 940e 08ff 	CALL __SAVELOCR4
0000f8 85ee      	LDD  R30,Y+14
0000f9 85ff      	LDD  R31,Y+14+1
0000fa 3fef      	CPI  R30,LOW(0xFFFF)
0000fb efaf      	LDI  R26,HIGH(0xFFFF)
0000fc 07fa      	CPC  R31,R26
0000fd f449      	BRNE _0x2000019
0000fe 85e8      	LDD  R30,Y+8
0000ff 85f9      	LDD  R31,Y+8+1
000100 93fa      	ST   -Y,R31
000101 93ea      	ST   -Y,R30
                +
000102 e6a2     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
000103 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
000104 940e 049c 	CALL _strcpyf
000106 c0b7      	RJMP _0x20C0006
                 _0x2000019:
000107 3fef      	CPI  R30,LOW(0x7FFF)
000108 e7af      	LDI  R26,HIGH(0x7FFF)
000109 07fa      	CPC  R31,R26
00010a f449      	BRNE _0x2000018
00010b 85e8      	LDD  R30,Y+8
00010c 85f9      	LDD  R31,Y+8+1
00010d 93fa      	ST   -Y,R31
00010e 93ea      	ST   -Y,R30
                +
00010f e6a3     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
000110 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
000111 940e 049c 	CALL _strcpyf
000113 c0aa      	RJMP _0x20C0006
                 _0x2000018:
000114 85ab      	LDD  R26,Y+11
000115 30a7      	CPI  R26,LOW(0x7)
000116 f010      	BRLO _0x200001B
000117 e0e6      	LDI  R30,LOW(6)
000118 87eb      	STD  Y+11,R30
                 _0x200001B:
000119 851b      	LDD  R17,Y+11
                 _0x200001C:
00011a 2fe1      	MOV  R30,R17
00011b 5011      	SUBI R17,1
00011c 30e0      	CPI  R30,0
00011d f019      	BREQ _0x200001E
00011e 940e 05b7 	CALL SUBOPT_0x3
000120 cff9      	RJMP _0x200001C
                 _0x200001E:
                +
000121 85ec     +LDD R30 , Y + 12
000122 85fd     +LDD R31 , Y + 12 + 1
000123 856e     +LDD R22 , Y + 12 + 2
000124 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000125 940e 08f9 	CALL __CPD10
000127 f421      	BRNE _0x200001F
000128 e030      	LDI  R19,LOW(0)
000129 940e 05b7 	CALL SUBOPT_0x3
00012b c02d      	RJMP _0x2000020
                 _0x200001F:
00012c 853b      	LDD  R19,Y+11
00012d 940e 05c6 	CALL SUBOPT_0x4
00012f f009      	BREQ PC+2
000130 f408      	BRCC PC+2
000131 c00b      	RJMP _0x2000021
000132 940e 05b7 	CALL SUBOPT_0x3
                 _0x2000022:
000134 940e 05c6 	CALL SUBOPT_0x4
000136 f028      	BRLO _0x2000024
000137 940e 05d1 	CALL SUBOPT_0x5
000139 940e 05d6 	CALL SUBOPT_0x6
00013b cff8      	RJMP _0x2000022
                 _0x2000024:
00013c c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
00013d 940e 05c6 	CALL SUBOPT_0x4
00013f f440      	BRSH _0x2000028
000140 940e 05d1 	CALL SUBOPT_0x5
000142 940e 05e2 	CALL SUBOPT_0x7
000144 940e 05e9 	CALL SUBOPT_0x8
000146 5031      	SUBI R19,LOW(1)
000147 cff5      	RJMP _0x2000026
                 _0x2000028:
000148 940e 05b7 	CALL SUBOPT_0x3
                 _0x2000025:
                +
00014a 85ec     +LDD R30 , Y + 12
00014b 85fd     +LDD R31 , Y + 12 + 1
00014c 856e     +LDD R22 , Y + 12 + 2
00014d 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00014e 940e 05ee 	CALL SUBOPT_0x9
000150 940e 05e9 	CALL SUBOPT_0x8
000152 940e 05c6 	CALL SUBOPT_0x4
000154 f020      	BRLO _0x2000029
000155 940e 05d1 	CALL SUBOPT_0x5
000157 940e 05d6 	CALL SUBOPT_0x6
                 _0x2000029:
                 _0x2000020:
000159 e010      	LDI  R17,LOW(0)
                 _0x200002A:
00015a 85eb      	LDD  R30,Y+11
00015b 17e1      	CP   R30,R17
00015c f1a8      	BRLO _0x200002C
                +
00015d 81ac     +LDD R26 , Y + 4
00015e 81bd     +LDD R27 , Y + 4 + 1
00015f 818e     +LDD R24 , Y + 4 + 2
000160 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000161 940e 05f5 	CALL SUBOPT_0xA
000163 940e 05ee 	CALL SUBOPT_0x9
000165 01df      	MOVW R26,R30
000166 01cb      	MOVW R24,R22
000167 940e 04f3 	CALL _floor
                +
000169 83ec     +STD Y + 4 , R30
00016a 83fd     +STD Y + 4 + 1 , R31
00016b 836e     +STD Y + 4 + 2 , R22
00016c 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00016d 940e 05d1 	CALL SUBOPT_0x5
00016f 940e 07f9 	CALL __DIVF21
000171 940e 06e8 	CALL __CFD1U
000173 2f0e      	MOV  R16,R30
000174 940e 05fc 	CALL SUBOPT_0xB
000176 940e 0603 	CALL SUBOPT_0xC
000178 27ff      	CLR  R31
000179 2766      	CLR  R22
00017a 2777      	CLR  R23
00017b 940e 0721 	CALL __CDF1
                +
00017d 81ac     +LDD R26 , Y + 4
00017e 81bd     +LDD R27 , Y + 4 + 1
00017f 818e     +LDD R24 , Y + 4 + 2
000180 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000181 940e 07ab 	CALL __MULF12
000183 940e 05d1 	CALL SUBOPT_0x5
000185 940e 0608 	CALL SUBOPT_0xD
000187 940e 05e9 	CALL SUBOPT_0x8
000189 2fe1      	MOV  R30,R17
00018a 5f1f      	SUBI R17,-1
00018b 30e0      	CPI  R30,0
00018c f669      	BRNE _0x200002A
00018d 940e 05fc 	CALL SUBOPT_0xB
00018f e2ee      	LDI  R30,LOW(46)
000190 93ec      	ST   X,R30
000191 cfc8      	RJMP _0x200002A
                 _0x200002C:
000192 940e 060d 	CALL SUBOPT_0xE
000194 9731      	SBIW R30,1
000195 85aa      	LDD  R26,Y+10
000196 83a0      	STD  Z+0,R26
000197 3030      	CPI  R19,0
000198 f42c      	BRGE _0x200002E
000199 9531      	NEG  R19
00019a 85a8      	LDD  R26,Y+8
00019b 85b9      	LDD  R27,Y+8+1
00019c e2ed      	LDI  R30,LOW(45)
00019d c003      	RJMP _0x2000113
                 _0x200002E:
00019e 85a8      	LDD  R26,Y+8
00019f 85b9      	LDD  R27,Y+8+1
0001a0 e2eb      	LDI  R30,LOW(43)
                 _0x2000113:
0001a1 93ec      	ST   X,R30
0001a2 940e 060d 	CALL SUBOPT_0xE
0001a4 940e 060d 	CALL SUBOPT_0xE
0001a6 9731      	SBIW R30,1
0001a7 01bf      	MOVW R22,R30
0001a8 2fa3      	MOV  R26,R19
0001a9 e0ea      	LDI  R30,LOW(10)
0001aa 940e 0883 	CALL __DIVB21
0001ac 5de0      	SUBI R30,-LOW(48)
0001ad 01db      	MOVW R26,R22
0001ae 93ec      	ST   X,R30
0001af 940e 060d 	CALL SUBOPT_0xE
0001b1 9731      	SBIW R30,1
0001b2 01bf      	MOVW R22,R30
0001b3 2fa3      	MOV  R26,R19
0001b4 e0ea      	LDI  R30,LOW(10)
0001b5 940e 08ad 	CALL __MODB21
0001b7 5de0      	SUBI R30,-LOW(48)
0001b8 01db      	MOVW R26,R22
0001b9 93ec      	ST   X,R30
0001ba 85a8      	LDD  R26,Y+8
0001bb 85b9      	LDD  R27,Y+8+1
0001bc e0e0      	LDI  R30,LOW(0)
0001bd 93ec      	ST   X,R30
                 _0x20C0006:
0001be 940e 0906 	CALL __LOADLOCR4
0001c0 9660      	ADIW R28,16
0001c1 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0001c2 93ba      	ST   -Y,R27
0001c3 93aa      	ST   -Y,R26
0001c4 97ef      	SBIW R28,63
0001c5 9761      	SBIW R28,17
0001c6 940e 08fd 	CALL __SAVELOCR6
0001c8 e010      	LDI  R17,0
                +
0001c9 01fe     +MOVW R30 , R28
0001ca 5ae8     +SUBI R30 , LOW ( - 88 )
0001cb 4fff     +SBCI R31 , HIGH ( - 88 )
0001cc 9001     +LD R0 , Z +
0001cd 81f0     +LD R31 , Z
0001ce 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0001cf 87e8      	STD  Y+8,R30
0001d0 87f9      	STD  Y+8+1,R31
                +
0001d1 01fe     +MOVW R30 , R28
0001d2 5aea     +SUBI R30 , LOW ( - 86 )
0001d3 4fff     +SBCI R31 , HIGH ( - 86 )
0001d4 9001     +LD R0 , Z +
0001d5 81f0     +LD R31 , Z
0001d6 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0001d7 83ee      	STD  Y+6,R30
0001d8 83ff      	STD  Y+6+1,R31
0001d9 81ae      	LDD  R26,Y+6
0001da 81bf      	LDD  R27,Y+6+1
0001db e0e0      	LDI  R30,LOW(0)
0001dc e0f0      	LDI  R31,HIGH(0)
0001dd 93ed      	ST   X+,R30
0001de 93fc      	ST   X,R31
                 _0x2000030:
0001df 01de      	MOVW R26,R28
0001e0 5aa4      	SUBI R26,LOW(-(92))
0001e1 4fbf      	SBCI R27,HIGH(-(92))
0001e2 940e 05aa 	CALL SUBOPT_0x1
0001e4 9731      	SBIW R30,1
0001e5 91e4      	LPM  R30,Z
0001e6 2f2e      	MOV  R18,R30
0001e7 30e0      	CPI  R30,0
0001e8 f409      	BRNE PC+2
0001e9 c1e9      	RJMP _0x2000032
0001ea 2fe1      	MOV  R30,R17
0001eb 30e0      	CPI  R30,0
0001ec f439      	BRNE _0x2000036
0001ed 3225      	CPI  R18,37
0001ee f411      	BRNE _0x2000037
0001ef e011      	LDI  R17,LOW(1)
0001f0 c002      	RJMP _0x2000038
                 _0x2000037:
0001f1 940e 0613 	CALL SUBOPT_0xF
                 _0x2000038:
0001f3 c1de      	RJMP _0x2000035
                 _0x2000036:
0001f4 30e1      	CPI  R30,LOW(0x1)
0001f5 f4c1      	BRNE _0x2000039
0001f6 3225      	CPI  R18,37
0001f7 f419      	BRNE _0x200003A
0001f8 940e 0613 	CALL SUBOPT_0xF
0001fa c1d6      	RJMP _0x2000114
                 _0x200003A:
0001fb e012      	LDI  R17,LOW(2)
0001fc e0e0      	LDI  R30,LOW(0)
0001fd 8bed      	STD  Y+21,R30
0001fe e000      	LDI  R16,LOW(0)
0001ff 322d      	CPI  R18,45
000200 f411      	BRNE _0x200003B
000201 e001      	LDI  R16,LOW(1)
000202 c1cf      	RJMP _0x2000035
                 _0x200003B:
000203 322b      	CPI  R18,43
000204 f419      	BRNE _0x200003C
000205 e2eb      	LDI  R30,LOW(43)
000206 8bed      	STD  Y+21,R30
000207 c1ca      	RJMP _0x2000035
                 _0x200003C:
000208 3220      	CPI  R18,32
000209 f419      	BRNE _0x200003D
00020a e2e0      	LDI  R30,LOW(32)
00020b 8bed      	STD  Y+21,R30
00020c c1c5      	RJMP _0x2000035
                 _0x200003D:
00020d c002      	RJMP _0x200003E
                 _0x2000039:
00020e 30e2      	CPI  R30,LOW(0x2)
00020f f439      	BRNE _0x200003F
                 _0x200003E:
000210 e050      	LDI  R21,LOW(0)
000211 e013      	LDI  R17,LOW(3)
000212 3320      	CPI  R18,48
000213 f411      	BRNE _0x2000040
000214 6800      	ORI  R16,LOW(128)
000215 c1bc      	RJMP _0x2000035
                 _0x2000040:
000216 c002      	RJMP _0x2000041
                 _0x200003F:
000217 30e3      	CPI  R30,LOW(0x3)
000218 f491      	BRNE _0x2000042
                 _0x2000041:
000219 3320      	CPI  R18,48
00021a f010      	BRLO _0x2000044
00021b 332a      	CPI  R18,58
00021c f008      	BRLO _0x2000045
                 _0x2000044:
00021d c007      	RJMP _0x2000043
                 _0x2000045:
00021e e0aa      	LDI  R26,LOW(10)
00021f 9f5a      	MUL  R21,R26
000220 2d50      	MOV  R21,R0
000221 2fe2      	MOV  R30,R18
000222 53e0      	SUBI R30,LOW(48)
000223 0f5e      	ADD  R21,R30
000224 c1ad      	RJMP _0x2000035
                 _0x2000043:
000225 e040      	LDI  R20,LOW(0)
000226 322e      	CPI  R18,46
000227 f411      	BRNE _0x2000046
000228 e014      	LDI  R17,LOW(4)
000229 c1a8      	RJMP _0x2000035
                 _0x2000046:
00022a c00f      	RJMP _0x2000047
                 _0x2000042:
00022b 30e4      	CPI  R30,LOW(0x4)
00022c f499      	BRNE _0x2000049
00022d 3320      	CPI  R18,48
00022e f010      	BRLO _0x200004B
00022f 332a      	CPI  R18,58
000230 f008      	BRLO _0x200004C
                 _0x200004B:
000231 c008      	RJMP _0x200004A
                 _0x200004C:
000232 6200      	ORI  R16,LOW(32)
000233 e0aa      	LDI  R26,LOW(10)
000234 9f4a      	MUL  R20,R26
000235 2d40      	MOV  R20,R0
000236 2fe2      	MOV  R30,R18
000237 53e0      	SUBI R30,LOW(48)
000238 0f4e      	ADD  R20,R30
000239 c198      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
00023a 362c      	CPI  R18,108
00023b f419      	BRNE _0x200004D
00023c 6002      	ORI  R16,LOW(2)
00023d e015      	LDI  R17,LOW(5)
00023e c193      	RJMP _0x2000035
                 _0x200004D:
00023f c003      	RJMP _0x200004E
                 _0x2000049:
000240 30e5      	CPI  R30,LOW(0x5)
000241 f009      	BREQ PC+2
000242 c18f      	RJMP _0x2000035
                 _0x200004E:
000243 2fe2      	MOV  R30,R18
000244 36e3      	CPI  R30,LOW(0x63)
000245 f459      	BRNE _0x2000053
000246 940e 061a 	CALL SUBOPT_0x10
000248 940e 0621 	CALL SUBOPT_0x11
00024a 940e 061a 	CALL SUBOPT_0x10
00024c 81a4      	LDD  R26,Z+4
00024d 93aa      	ST   -Y,R26
00024e 940e 0628 	CALL SUBOPT_0x12
000250 c180      	RJMP _0x2000054
                 _0x2000053:
000251 34e5      	CPI  R30,LOW(0x45)
000252 f011      	BREQ _0x2000057
000253 36e5      	CPI  R30,LOW(0x65)
000254 f409      	BRNE _0x2000058
                 _0x2000057:
000255 c003      	RJMP _0x2000059
                 _0x2000058:
000256 36e6      	CPI  R30,LOW(0x66)
000257 f009      	BREQ PC+2
000258 c048      	RJMP _0x200005A
                 _0x2000059:
000259 01fe      	MOVW R30,R28
00025a 9676      	ADIW R30,22
00025b 87ee      	STD  Y+14,R30
00025c 87ff      	STD  Y+14+1,R31
00025d 940e 062e 	CALL SUBOPT_0x13
00025f 940e 08cd 	CALL __GETD1P
000261 940e 0635 	CALL SUBOPT_0x14
000263 940e 063a 	CALL SUBOPT_0x15
000265 85ad      	LDD  R26,Y+13
000266 23aa      	TST  R26
000267 f032      	BRMI _0x200005B
000268 89ad      	LDD  R26,Y+21
000269 32ab      	CPI  R26,LOW(0x2B)
00026a f059      	BREQ _0x200005D
00026b 32a0      	CPI  R26,LOW(0x20)
00026c f081      	BREQ _0x200005F
00026d c017      	RJMP _0x2000060
                 _0x200005B:
00026e 940e 063c 	CALL SUBOPT_0x16
000270 940e 06b5 	CALL __ANEGF1
000272 940e 0635 	CALL SUBOPT_0x14
000274 e2ed      	LDI  R30,LOW(45)
000275 8bed      	STD  Y+21,R30
                 _0x200005D:
000276 ff07      	SBRS R16,7
000277 c005      	RJMP _0x2000061
000278 89ed      	LDD  R30,Y+21
000279 93ea      	ST   -Y,R30
00027a 940e 0628 	CALL SUBOPT_0x12
00027c c008      	RJMP _0x2000062
                 _0x2000061:
                 _0x200005F:
00027d 85ee      	LDD  R30,Y+14
00027e 85ff      	LDD  R31,Y+14+1
00027f 9631      	ADIW R30,1
000280 87ee      	STD  Y+14,R30
000281 87ff      	STD  Y+14+1,R31
000282 9731      	SBIW R30,1
000283 89ad      	LDD  R26,Y+21
000284 83a0      	STD  Z+0,R26
                 _0x2000062:
                 _0x2000060:
000285 ff05      	SBRS R16,5
000286 e046      	LDI  R20,LOW(6)
000287 3626      	CPI  R18,102
000288 f451      	BRNE _0x2000064
000289 940e 063c 	CALL SUBOPT_0x16
00028b 940e 08e2 	CALL __PUTPARD1
00028d 934a      	ST   -Y,R20
00028e 89ab      	LDD  R26,Y+19
00028f 89bc      	LDD  R27,Y+19+1
000290 940e 050a 	CALL _ftoa
000292 c009      	RJMP _0x2000065
                 _0x2000064:
000293 940e 063c 	CALL SUBOPT_0x16
000295 940e 08e2 	CALL __PUTPARD1
000297 934a      	ST   -Y,R20
000298 932a      	ST   -Y,R18
000299 89ac      	LDD  R26,Y+20
00029a 89bd      	LDD  R27,Y+20+1
00029b de54      	RCALL __ftoe_G100
                 _0x2000065:
00029c 01fe      	MOVW R30,R28
00029d 9676      	ADIW R30,22
00029e 940e 0641 	CALL SUBOPT_0x17
0002a0 c01e      	RJMP _0x2000066
                 _0x200005A:
0002a1 37e3      	CPI  R30,LOW(0x73)
0002a2 f439      	BRNE _0x2000068
0002a3 940e 063a 	CALL SUBOPT_0x15
0002a5 940e 0649 	CALL SUBOPT_0x18
0002a7 940e 0641 	CALL SUBOPT_0x17
0002a9 c00e      	RJMP _0x2000069
                 _0x2000068:
0002aa 37e0      	CPI  R30,LOW(0x70)
0002ab f4c1      	BRNE _0x200006B
0002ac 940e 063a 	CALL SUBOPT_0x15
0002ae 940e 0649 	CALL SUBOPT_0x18
0002b0 87ee      	STD  Y+14,R30
0002b1 87ff      	STD  Y+14+1,R31
0002b2 85ae      	LDD  R26,Y+14
0002b3 85bf      	LDD  R27,Y+14+1
0002b4 940e 04b5 	CALL _strlenf
0002b6 2f1e      	MOV  R17,R30
0002b7 6008      	ORI  R16,LOW(8)
                 _0x2000069:
0002b8 770f      	ANDI R16,LOW(127)
0002b9 3040      	CPI  R20,0
0002ba f011      	BREQ _0x200006D
0002bb 1741      	CP   R20,R17
0002bc f008      	BRLO _0x200006E
                 _0x200006D:
0002bd c001      	RJMP _0x200006C
                 _0x200006E:
0002be 2f14      	MOV  R17,R20
                 _0x200006C:
                 _0x2000066:
0002bf e040      	LDI  R20,LOW(0)
0002c0 e0e0      	LDI  R30,LOW(0)
0002c1 8bec      	STD  Y+20,R30
0002c2 e030      	LDI  R19,LOW(0)
0002c3 c06d      	RJMP _0x200006F
                 _0x200006B:
0002c4 36e4      	CPI  R30,LOW(0x64)
0002c5 f011      	BREQ _0x2000072
0002c6 36e9      	CPI  R30,LOW(0x69)
0002c7 f411      	BRNE _0x2000073
                 _0x2000072:
0002c8 6004      	ORI  R16,LOW(4)
0002c9 c002      	RJMP _0x2000074
                 _0x2000073:
0002ca 37e5      	CPI  R30,LOW(0x75)
0002cb f4a1      	BRNE _0x2000075
                 _0x2000074:
0002cc e0ea      	LDI  R30,LOW(10)
0002cd 8bec      	STD  Y+20,R30
0002ce ff01      	SBRS R16,1
0002cf c008      	RJMP _0x2000076
                +
0002d0 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0002d1 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0002d2 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0002d3 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0002d4 940e 064e 	CALL SUBOPT_0x19
0002d6 e01a      	LDI  R17,LOW(10)
0002d7 c022      	RJMP _0x2000077
                 _0x2000076:
                +
0002d8 e1e0     +LDI R30 , LOW ( 0x2710 )
0002d9 e2f7     +LDI R31 , HIGH ( 0x2710 )
0002da e060     +LDI R22 , BYTE3 ( 0x2710 )
0002db e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0002dc 940e 064e 	CALL SUBOPT_0x19
0002de e015      	LDI  R17,LOW(5)
0002df c01a      	RJMP _0x2000077
                 _0x2000075:
0002e0 35e8      	CPI  R30,LOW(0x58)
0002e1 f411      	BRNE _0x2000079
0002e2 6008      	ORI  R16,LOW(8)
0002e3 c003      	RJMP _0x200007A
                 _0x2000079:
0002e4 37e8      	CPI  R30,LOW(0x78)
0002e5 f009      	BREQ PC+2
0002e6 c0ea      	RJMP _0x20000B8
                 _0x200007A:
0002e7 e1e0      	LDI  R30,LOW(16)
0002e8 8bec      	STD  Y+20,R30
0002e9 ff01      	SBRS R16,1
0002ea c008      	RJMP _0x200007C
                +
0002eb e0e0     +LDI R30 , LOW ( 0x10000000 )
0002ec e0f0     +LDI R31 , HIGH ( 0x10000000 )
0002ed e060     +LDI R22 , BYTE3 ( 0x10000000 )
0002ee e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
0002ef 940e 064e 	CALL SUBOPT_0x19
0002f1 e018      	LDI  R17,LOW(8)
0002f2 c007      	RJMP _0x2000077
                 _0x200007C:
                +
0002f3 e0e0     +LDI R30 , LOW ( 0x1000 )
0002f4 e1f0     +LDI R31 , HIGH ( 0x1000 )
0002f5 e060     +LDI R22 , BYTE3 ( 0x1000 )
0002f6 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
0002f7 940e 064e 	CALL SUBOPT_0x19
0002f9 e014      	LDI  R17,LOW(4)
                 _0x2000077:
0002fa 3040      	CPI  R20,0
0002fb f011      	BREQ _0x200007D
0002fc 770f      	ANDI R16,LOW(127)
0002fd c001      	RJMP _0x200007E
                 _0x200007D:
0002fe e041      	LDI  R20,LOW(1)
                 _0x200007E:
0002ff ff01      	SBRS R16,1
000300 c008      	RJMP _0x200007F
000301 940e 063a 	CALL SUBOPT_0x15
000303 940e 062e 	CALL SUBOPT_0x13
000305 9614      	ADIW R26,4
000306 940e 08cd 	CALL __GETD1P
000308 c00f      	RJMP _0x2000115
                 _0x200007F:
000309 ff02      	SBRS R16,2
00030a c007      	RJMP _0x2000081
00030b 940e 063a 	CALL SUBOPT_0x15
00030d 940e 0649 	CALL SUBOPT_0x18
00030f 940e 0870 	CALL __CWD1
000311 c006      	RJMP _0x2000115
                 _0x2000081:
000312 940e 063a 	CALL SUBOPT_0x15
000314 940e 0649 	CALL SUBOPT_0x18
000316 2766      	CLR  R22
000317 2777      	CLR  R23
                 _0x2000115:
                +
000318 87ea     +STD Y + 10 , R30
000319 87fb     +STD Y + 10 + 1 , R31
00031a 876c     +STD Y + 10 + 2 , R22
00031b 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00031c ff02      	SBRS R16,2
00031d c012      	RJMP _0x2000083
00031e 85ad      	LDD  R26,Y+13
00031f 23aa      	TST  R26
000320 f442      	BRPL _0x2000084
000321 940e 063c 	CALL SUBOPT_0x16
000323 940e 0862 	CALL __ANEGD1
000325 940e 0635 	CALL SUBOPT_0x14
000327 e2ed      	LDI  R30,LOW(45)
000328 8bed      	STD  Y+21,R30
                 _0x2000084:
000329 89ed      	LDD  R30,Y+21
00032a 30e0      	CPI  R30,0
00032b f019      	BREQ _0x2000085
00032c 5f1f      	SUBI R17,-LOW(1)
00032d 5f4f      	SUBI R20,-LOW(1)
00032e c001      	RJMP _0x2000086
                 _0x2000085:
00032f 7f0b      	ANDI R16,LOW(251)
                 _0x2000086:
                 _0x2000083:
000330 2f34      	MOV  R19,R20
                 _0x200006F:
000331 fd00      	SBRC R16,0
000332 c014      	RJMP _0x2000087
                 _0x2000088:
000333 1715      	CP   R17,R21
000334 f410      	BRSH _0x200008B
000335 1735      	CP   R19,R21
000336 f008      	BRLO _0x200008C
                 _0x200008B:
000337 c00f      	RJMP _0x200008A
                 _0x200008C:
000338 ff07      	SBRS R16,7
000339 c008      	RJMP _0x200008D
00033a ff02      	SBRS R16,2
00033b c004      	RJMP _0x200008E
00033c 7f0b      	ANDI R16,LOW(251)
00033d 892d      	LDD  R18,Y+21
00033e 5011      	SUBI R17,LOW(1)
00033f c001      	RJMP _0x200008F
                 _0x200008E:
000340 e320      	LDI  R18,LOW(48)
                 _0x200008F:
000341 c001      	RJMP _0x2000090
                 _0x200008D:
000342 e220      	LDI  R18,LOW(32)
                 _0x2000090:
000343 940e 0613 	CALL SUBOPT_0xF
000345 5051      	SUBI R21,LOW(1)
000346 cfec      	RJMP _0x2000088
                 _0x200008A:
                 _0x2000087:
                 _0x2000091:
000347 1714      	CP   R17,R20
000348 f490      	BRSH _0x2000093
000349 6100      	ORI  R16,LOW(16)
00034a ff02      	SBRS R16,2
00034b c006      	RJMP _0x2000094
00034c 940e 0653 	CALL SUBOPT_0x1A
00034e f009      	BREQ _0x2000095
00034f 5051      	SUBI R21,LOW(1)
                 _0x2000095:
000350 5011      	SUBI R17,LOW(1)
000351 5041      	SUBI R20,LOW(1)
                 _0x2000094:
000352 e3e0      	LDI  R30,LOW(48)
000353 93ea      	ST   -Y,R30
000354 940e 0628 	CALL SUBOPT_0x12
000356 3050      	CPI  R21,0
000357 f009      	BREQ _0x2000096
000358 5051      	SUBI R21,LOW(1)
                 _0x2000096:
000359 5041      	SUBI R20,LOW(1)
00035a cfec      	RJMP _0x2000091
                 _0x2000093:
00035b 2f31      	MOV  R19,R17
00035c 89ec      	LDD  R30,Y+20
00035d 30e0      	CPI  R30,0
00035e f4b9      	BRNE _0x2000097
                 _0x2000098:
00035f 3030      	CPI  R19,0
000360 f0a1      	BREQ _0x200009A
000361 ff03      	SBRS R16,3
000362 c006      	RJMP _0x200009B
000363 85ee      	LDD  R30,Y+14
000364 85ff      	LDD  R31,Y+14+1
000365 9125      	LPM  R18,Z+
000366 87ee      	STD  Y+14,R30
000367 87ff      	STD  Y+14+1,R31
000368 c005      	RJMP _0x200009C
                 _0x200009B:
000369 85ae      	LDD  R26,Y+14
00036a 85bf      	LDD  R27,Y+14+1
00036b 912d      	LD   R18,X+
00036c 87ae      	STD  Y+14,R26
00036d 87bf      	STD  Y+14+1,R27
                 _0x200009C:
00036e 940e 0613 	CALL SUBOPT_0xF
000370 3050      	CPI  R21,0
000371 f009      	BREQ _0x200009D
000372 5051      	SUBI R21,LOW(1)
                 _0x200009D:
000373 5031      	SUBI R19,LOW(1)
000374 cfea      	RJMP _0x2000098
                 _0x200009A:
000375 c051      	RJMP _0x200009E
                 _0x2000097:
                 _0x20000A0:
000376 940e 0665 	CALL SUBOPT_0x1B
000378 940e 0888 	CALL __DIVD21U
00037a 2f2e      	MOV  R18,R30
00037b 302a      	CPI  R18,10
00037c f030      	BRLO _0x20000A2
00037d ff03      	SBRS R16,3
00037e c002      	RJMP _0x20000A3
00037f 5c29      	SUBI R18,-LOW(55)
000380 c001      	RJMP _0x20000A4
                 _0x20000A3:
000381 5a29      	SUBI R18,-LOW(87)
                 _0x20000A4:
000382 c001      	RJMP _0x20000A5
                 _0x20000A2:
000383 5d20      	SUBI R18,-LOW(48)
                 _0x20000A5:
000384 fd04      	SBRC R16,4
000385 c021      	RJMP _0x20000A7
000386 3321      	CPI  R18,49
000387 f460      	BRSH _0x20000A9
                +
000388 89a8     +LDD R26 , Y + 16
000389 89b9     +LDD R27 , Y + 16 + 1
00038a 898a     +LDD R24 , Y + 16 + 2
00038b 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
00038c 30a1     +CPI R26 , LOW ( 0x1 )
00038d e0e0     +LDI R30 , HIGH ( 0x1 )
00038e 07be     +CPC R27 , R30
00038f e0e0     +LDI R30 , BYTE3 ( 0x1 )
000390 078e     +CPC R24 , R30
000391 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000392 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000393 f409      	BRNE _0x20000A8
                 _0x20000A9:
000394 c00b      	RJMP _0x20000AB
                 _0x20000A8:
000395 1743      	CP   R20,R19
000396 f440      	BRSH _0x2000116
000397 1753      	CP   R21,R19
000398 f010      	BRLO _0x20000AE
000399 ff00      	SBRS R16,0
00039a c001      	RJMP _0x20000AF
                 _0x20000AE:
00039b c010      	RJMP _0x20000AD
                 _0x20000AF:
00039c e220      	LDI  R18,LOW(32)
00039d ff07      	SBRS R16,7
00039e c008      	RJMP _0x20000B0
                 _0x2000116:
00039f e320      	LDI  R18,LOW(48)
                 _0x20000AB:
0003a0 6100      	ORI  R16,LOW(16)
0003a1 ff02      	SBRS R16,2
0003a2 c004      	RJMP _0x20000B1
0003a3 940e 0653 	CALL SUBOPT_0x1A
0003a5 f009      	BREQ _0x20000B2
0003a6 5051      	SUBI R21,LOW(1)
                 _0x20000B2:
                 _0x20000B1:
                 _0x20000B0:
                 _0x20000A7:
0003a7 940e 0613 	CALL SUBOPT_0xF
0003a9 3050      	CPI  R21,0
0003aa f009      	BREQ _0x20000B3
0003ab 5051      	SUBI R21,LOW(1)
                 _0x20000B3:
                 _0x20000AD:
0003ac 5031      	SUBI R19,LOW(1)
0003ad 940e 0665 	CALL SUBOPT_0x1B
0003af 940e 08b9 	CALL __MODD21U
0003b1 940e 0635 	CALL SUBOPT_0x14
0003b3 89ec      	LDD  R30,Y+20
                +
0003b4 89a8     +LDD R26 , Y + 16
0003b5 89b9     +LDD R27 , Y + 16 + 1
0003b6 898a     +LDD R24 , Y + 16 + 2
0003b7 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0003b8 27ff      	CLR  R31
0003b9 2766      	CLR  R22
0003ba 2777      	CLR  R23
0003bb 940e 0888 	CALL __DIVD21U
0003bd 940e 064e 	CALL SUBOPT_0x19
                +
0003bf 89e8     +LDD R30 , Y + 16
0003c0 89f9     +LDD R31 , Y + 16 + 1
0003c1 896a     +LDD R22 , Y + 16 + 2
0003c2 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
0003c3 940e 08f9 	CALL __CPD10
0003c5 f009      	BREQ _0x20000A1
0003c6 cfaf      	RJMP _0x20000A0
                 _0x20000A1:
                 _0x200009E:
0003c7 ff00      	SBRS R16,0
0003c8 c008      	RJMP _0x20000B4
                 _0x20000B5:
0003c9 3050      	CPI  R21,0
0003ca f031      	BREQ _0x20000B7
0003cb 5051      	SUBI R21,LOW(1)
0003cc e2e0      	LDI  R30,LOW(32)
0003cd 93ea      	ST   -Y,R30
0003ce 940e 0628 	CALL SUBOPT_0x12
0003d0 cff8      	RJMP _0x20000B5
                 _0x20000B7:
                 _0x20000B4:
                 _0x20000B8:
                 _0x2000054:
                 _0x2000114:
0003d1 e010      	LDI  R17,LOW(0)
                 _0x2000035:
0003d2 ce0c      	RJMP _0x2000030
                 _0x2000032:
0003d3 81ae      	LDD  R26,Y+6
0003d4 81bf      	LDD  R27,Y+6+1
0003d5 940e 08c9 	CALL __GETW1P
0003d7 940e 0904 	CALL __LOADLOCR6
0003d9 96ef      	ADIW R28,63
0003da 966f      	ADIW R28,31
0003db 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0003dc 92ff      	PUSH R15
0003dd 2ef8      	MOV  R15,R24
0003de 9726      	SBIW R28,6
0003df 940e 08ff 	CALL __SAVELOCR4
0003e1 940e 066e 	CALL SUBOPT_0x1C
0003e3 9730      	SBIW R30,0
0003e4 f419      	BRNE _0x20000B9
0003e5 efef      	LDI  R30,LOW(65535)
0003e6 efff      	LDI  R31,HIGH(65535)
0003e7 c023      	RJMP _0x20C0005
                 _0x20000B9:
0003e8 01de      	MOVW R26,R28
0003e9 9616      	ADIW R26,6
0003ea 940e 085e 	CALL __ADDW2R15
0003ec 018d      	MOVW R16,R26
0003ed 940e 066e 	CALL SUBOPT_0x1C
0003ef 83ee      	STD  Y+6,R30
0003f0 83ff      	STD  Y+6+1,R31
0003f1 e0e0      	LDI  R30,LOW(0)
0003f2 87e8      	STD  Y+8,R30
0003f3 87e9      	STD  Y+8+1,R30
0003f4 01de      	MOVW R26,R28
0003f5 961a      	ADIW R26,10
0003f6 940e 085e 	CALL __ADDW2R15
0003f8 940e 08c9 	CALL __GETW1P
0003fa 93fa      	ST   -Y,R31
0003fb 93ea      	ST   -Y,R30
0003fc 931a      	ST   -Y,R17
0003fd 930a      	ST   -Y,R16
0003fe ebe6      	LDI  R30,LOW(_put_buff_G100)
0003ff e0f0      	LDI  R31,HIGH(_put_buff_G100)
000400 93fa      	ST   -Y,R31
000401 93ea      	ST   -Y,R30
000402 01de      	MOVW R26,R28
000403 961a      	ADIW R26,10
000404 ddbd      	RCALL __print_G100
000405 019f      	MOVW R18,R30
000406 81ae      	LDD  R26,Y+6
000407 81bf      	LDD  R27,Y+6+1
000408 e0e0      	LDI  R30,LOW(0)
000409 93ec      	ST   X,R30
00040a 01f9      	MOVW R30,R18
                 _0x20C0005:
00040b 940e 0906 	CALL __LOADLOCR4
00040d 962a      	ADIW R28,10
00040e 90ff      	POP  R15
00040f 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
000410 93aa      	ST   -Y,R26
000411 b3eb      	IN   R30,0x1B
000412 70ef      	ANDI R30,LOW(0xF)
000413 2fae      	MOV  R26,R30
000414 81e8      	LD   R30,Y
000415 7fe0      	ANDI R30,LOW(0xF0)
000416 2bea      	OR   R30,R26
000417 bbeb      	OUT  0x1B,R30
                +
000418 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000419 958a     +DEC R24
00041a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
00041b 9ada      	SBI  0x1B,2
                +
00041c e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
00041d 958a     +DEC R24
00041e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
00041f 98da      	CBI  0x1B,2
                +
000420 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000421 958a     +DEC R24
000422 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000423 c076      	RJMP _0x20C0004
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000424 93aa      	ST   -Y,R26
000425 81a8      	LD   R26,Y
000426 dfe9      	RCALL __lcd_write_nibble_G101
000427 81e8          ld    r30,y
000428 95e2          swap  r30
000429 83e8          st    y,r30
00042a 81a8      	LD   R26,Y
00042b dfe4      	RCALL __lcd_write_nibble_G101
                +
00042c e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
00042d 958a     +DEC R24
00042e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
00042f c06a      	RJMP _0x20C0004
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000430 93aa      	ST   -Y,R26
000431 81e8      	LD   R30,Y
000432 e0f0      	LDI  R31,0
000433 59e6      	SUBI R30,LOW(-__base_y_G101)
000434 4ffe      	SBCI R31,HIGH(-__base_y_G101)
000435 81e0      	LD   R30,Z
000436 81a9      	LDD  R26,Y+1
000437 0fae      	ADD  R26,R30
000438 dfeb      	RCALL __lcd_write_data
000439 8079      	LDD  R7,Y+1
00043a 8068      	LDD  R6,Y+0
00043b 9622      	ADIW R28,2
00043c 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00043d e0a2      	LDI  R26,LOW(2)
00043e 940e 0675 	CALL SUBOPT_0x1D
000440 e0ac      	LDI  R26,LOW(12)
000441 dfe2      	RCALL __lcd_write_data
000442 e0a1      	LDI  R26,LOW(1)
000443 940e 0675 	CALL SUBOPT_0x1D
000445 e0e0      	LDI  R30,LOW(0)
000446 2e6e      	MOV  R6,R30
000447 2e7e      	MOV  R7,R30
000448 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000449 93aa      	ST   -Y,R26
00044a 81a8      	LD   R26,Y
00044b 30aa      	CPI  R26,LOW(0xA)
00044c f011      	BREQ _0x2020005
00044d 1479      	CP   R7,R9
00044e f048      	BRLO _0x2020004
                 _0x2020005:
00044f e0e0      	LDI  R30,LOW(0)
000450 93ea      	ST   -Y,R30
000451 9463      	INC  R6
000452 2da6      	MOV  R26,R6
000453 dfdc      	RCALL _lcd_gotoxy
000454 81a8      	LD   R26,Y
000455 30aa      	CPI  R26,LOW(0xA)
000456 f409      	BRNE _0x2020007
000457 c042      	RJMP _0x20C0004
                 _0x2020007:
                 _0x2020004:
000458 9473      	INC  R7
000459 9ad8      	SBI  0x1B,0
00045a 81a8      	LD   R26,Y
00045b dfc8      	RCALL __lcd_write_data
00045c 98d8      	CBI  0x1B,0
00045d c03c      	RJMP _0x20C0004
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00045e 93ba      	ST   -Y,R27
00045f 93aa      	ST   -Y,R26
000460 931a      	ST   -Y,R17
                 _0x2020008:
000461 81a9      	LDD  R26,Y+1
000462 81ba      	LDD  R27,Y+1+1
000463 91ed      	LD   R30,X+
000464 83a9      	STD  Y+1,R26
000465 83ba      	STD  Y+1+1,R27
000466 2f1e      	MOV  R17,R30
000467 30e0      	CPI  R30,0
000468 f019      	BREQ _0x202000A
000469 2fa1      	MOV  R26,R17
00046a dfde      	RCALL _lcd_putchar
00046b cff5      	RJMP _0x2020008
                 _0x202000A:
00046c 8118      	LDD  R17,Y+0
00046d 9623      	ADIW R28,3
00046e 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00046f 93aa      	ST   -Y,R26
000470 b3ea      	IN   R30,0x1A
000471 6fe0      	ORI  R30,LOW(0xF0)
000472 bbea      	OUT  0x1A,R30
000473 9ad2      	SBI  0x1A,2
000474 9ad0      	SBI  0x1A,0
000475 9ad1      	SBI  0x1A,1
000476 98da      	CBI  0x1B,2
000477 98d8      	CBI  0x1B,0
000478 98d9      	CBI  0x1B,1
000479 8098      	LDD  R9,Y+0
00047a 81e8      	LD   R30,Y
00047b 58e0      	SUBI R30,-LOW(128)
                +
00047c 93e0 016c+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
00047e 81e8      	LD   R30,Y
00047f 54e0      	SUBI R30,-LOW(192)
                +
000480 93e0 016d+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
000482 e1a4      	LDI  R26,LOW(20)
000483 e0b0      	LDI  R27,0
000484 940e 06ab 	CALL _delay_ms
000486 940e 067b 	CALL SUBOPT_0x1E
000488 940e 067b 	CALL SUBOPT_0x1E
00048a 940e 067b 	CALL SUBOPT_0x1E
00048c e2a0      	LDI  R26,LOW(32)
00048d df82      	RCALL __lcd_write_nibble_G101
                +
00048e e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
00048f 958a     +DEC R24
000490 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000491 e2a8      	LDI  R26,LOW(40)
000492 df91      	RCALL __lcd_write_data
000493 e0a4      	LDI  R26,LOW(4)
000494 df8f      	RCALL __lcd_write_data
000495 e8a5      	LDI  R26,LOW(133)
000496 df8d      	RCALL __lcd_write_data
000497 e0a6      	LDI  R26,LOW(6)
000498 df8b      	RCALL __lcd_write_data
000499 dfa3      	RCALL _lcd_clear
                 _0x20C0004:
00049a 9621      	ADIW R28,1
00049b 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
00049c 93ba      	ST   -Y,R27
00049d 93aa      	ST   -Y,R26
00049e 91e9          ld   r30,y+
00049f 91f9          ld   r31,y+
0004a0 91a9          ld   r26,y+
0004a1 91b9          ld   r27,y+
0004a2 01cd          movw r24,r26
                 strcpyf0:
0004a3 9005      	lpm  r0,z+
0004a4 920d          st   x+,r0
0004a5 2000          tst  r0
0004a6 f7e1          brne strcpyf0
0004a7 01fc          movw r30,r24
0004a8 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0004a9 93ba      	ST   -Y,R27
0004aa 93aa      	ST   -Y,R26
0004ab 91a9          ld   r26,y+
0004ac 91b9          ld   r27,y+
0004ad 27ee          clr  r30
0004ae 27ff          clr  r31
                 strlen0:
0004af 916d          ld   r22,x+
0004b0 2366          tst  r22
0004b1 f011          breq strlen1
0004b2 9631          adiw r30,1
0004b3 cffb          rjmp strlen0
                 strlen1:
0004b4 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0004b5 93ba      	ST   -Y,R27
0004b6 93aa      	ST   -Y,R26
0004b7 27aa          clr  r26
0004b8 27bb          clr  r27
0004b9 91e9          ld   r30,y+
0004ba 91f9          ld   r31,y+
                 strlenf0:
0004bb 9005      	lpm  r0,z+
0004bc 2000          tst  r0
0004bd f011          breq strlenf1
0004be 9611          adiw r26,1
0004bf cffb          rjmp strlenf0
                 strlenf1:
0004c0 01fd          movw r30,r26
0004c1 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
0004c2 940e 08e7 	CALL __PUTPARD2
0004c4 817b         ldd  r23,y+3
0004c5 816a         ldd  r22,y+2
0004c6 81f9         ldd  r31,y+1
0004c7 81e8         ld   r30,y
0004c8 fb77         bst  r23,7
0004c9 0f77         lsl  r23
0004ca fd67         sbrc r22,7
0004cb 6071         sbr  r23,1
0004cc 2f97         mov  r25,r23
0004cd 579e         subi r25,0x7e
0004ce f081         breq __ftrunc0
0004cf f078         brcs __ftrunc0
0004d0 3198         cpi  r25,24
0004d1 f490         brsh __ftrunc1
0004d2 27aa         clr  r26
0004d3 27bb         clr  r27
0004d4 2788         clr  r24
                 __ftrunc2:
0004d5 9408         sec
0004d6 9587         ror  r24
0004d7 95b7         ror  r27
0004d8 95a7         ror  r26
0004d9 959a         dec  r25
0004da f7d1         brne __ftrunc2
0004db 23ea         and  r30,r26
0004dc 23fb         and  r31,r27
0004dd 2368         and  r22,r24
0004de c005         rjmp __ftrunc1
                 __ftrunc0:
0004df 94e8         clt
0004e0 2777         clr  r23
0004e1 27ee         clr  r30
0004e2 27ff         clr  r31
0004e3 2766         clr  r22
                 __ftrunc1:
0004e4 776f         cbr  r22,0x80
0004e5 9576         lsr  r23
0004e6 f408         brcc __ftrunc3
0004e7 6860         sbr  r22,0x80
                 __ftrunc3:
0004e8 f977         bld  r23,7
0004e9 91a9         ld   r26,y+
0004ea 91b9         ld   r27,y+
0004eb 9189         ld   r24,y+
0004ec 9199         ld   r25,y+
0004ed 17ea         cp   r30,r26
0004ee 07fb         cpc  r31,r27
0004ef 0768         cpc  r22,r24
0004f0 0779         cpc  r23,r25
0004f1 fb97         bst  r25,7
0004f2 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0004f3 940e 08e7 	CALL __PUTPARD2
0004f5 940e 08d8 	CALL __GETD2S0
0004f7 940e 04c2 	CALL _ftrunc
0004f9 940e 08dd 	CALL __PUTD1S0
0004fb f419          brne __floor1
                 __floor0:
0004fc 940e 08d3 	CALL __GETD1S0
0004fe c009      	RJMP _0x20C0003
                 __floor1:
0004ff f7e6          brtc __floor0
000500 940e 08d3 	CALL __GETD1S0
                +
000502 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000503 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000504 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000505 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000506 940e 0754 	CALL __SUBF12
                 _0x20C0003:
000508 9624      	ADIW R28,4
000509 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
00050a d0a5      	RCALL SUBOPT_0x2
00050b e0e0      	LDI  R30,LOW(0)
00050c 83ea      	STD  Y+2,R30
00050d e3ef      	LDI  R30,LOW(63)
00050e 83eb      	STD  Y+3,R30
00050f 931a      	ST   -Y,R17
000510 930a      	ST   -Y,R16
000511 85eb      	LDD  R30,Y+11
000512 85fc      	LDD  R31,Y+11+1
000513 3fef      	CPI  R30,LOW(0xFFFF)
000514 efaf      	LDI  R26,HIGH(0xFFFF)
000515 07fa      	CPC  R31,R26
000516 f431      	BRNE _0x20A000D
000517 d16a      	RCALL SUBOPT_0x1F
                +
000518 e6ac     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
000519 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
00051a 940e 049c 	CALL _strcpyf
00051c c084      	RJMP _0x20C0002
                 _0x20A000D:
00051d 3fef      	CPI  R30,LOW(0x7FFF)
00051e e7af      	LDI  R26,HIGH(0x7FFF)
00051f 07fa      	CPC  R31,R26
000520 f431      	BRNE _0x20A000C
000521 d160      	RCALL SUBOPT_0x1F
                +
000522 e6ad     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
000523 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
000524 940e 049c 	CALL _strcpyf
000526 c07a      	RJMP _0x20C0002
                 _0x20A000C:
000527 85ac      	LDD  R26,Y+12
000528 23aa      	TST  R26
000529 f452      	BRPL _0x20A000F
                +
00052a 85e9     +LDD R30 , Y + 9
00052b 85fa     +LDD R31 , Y + 9 + 1
00052c 856b     +LDD R22 , Y + 9 + 2
00052d 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00052e 940e 06b5 	CALL __ANEGF1
000530 d156      	RCALL SUBOPT_0x20
000531 d15a      	RCALL SUBOPT_0x21
000532 e2ed      	LDI  R30,LOW(45)
000533 93ec      	ST   X,R30
                 _0x20A000F:
000534 85a8      	LDD  R26,Y+8
000535 30a7      	CPI  R26,LOW(0x7)
000536 f010      	BRLO _0x20A0010
000537 e0e6      	LDI  R30,LOW(6)
000538 87e8      	STD  Y+8,R30
                 _0x20A0010:
000539 8518      	LDD  R17,Y+8
                 _0x20A0011:
00053a 2fe1      	MOV  R30,R17
00053b 5011      	SUBI R17,1
00053c 30e0      	CPI  R30,0
00053d f021      	BREQ _0x20A0013
00053e d154      	RCALL SUBOPT_0x22
00053f d0b5      	RCALL SUBOPT_0xA
000540 d157      	RCALL SUBOPT_0x23
000541 cff8      	RJMP _0x20A0011
                 _0x20A0013:
000542 d15a      	RCALL SUBOPT_0x24
000543 940e 075b 	CALL __ADDF12
000545 d141      	RCALL SUBOPT_0x20
000546 e010      	LDI  R17,LOW(0)
                +
000547 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000548 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000549 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00054a e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00054b d14c      	RCALL SUBOPT_0x23
                 _0x20A0014:
00054c d150      	RCALL SUBOPT_0x24
00054d 940e 083e 	CALL __CMPF12
00054f f068      	BRLO _0x20A0016
000550 d142      	RCALL SUBOPT_0x22
000551 d090      	RCALL SUBOPT_0x7
000552 d145      	RCALL SUBOPT_0x23
000553 5f1f      	SUBI R17,-LOW(1)
000554 3217      	CPI  R17,39
000555 f030      	BRLO _0x20A0017
000556 d12b      	RCALL SUBOPT_0x1F
                +
000557 e7a1     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
000558 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
000559 940e 049c 	CALL _strcpyf
00055b c045      	RJMP _0x20C0002
                 _0x20A0017:
00055c cfef      	RJMP _0x20A0014
                 _0x20A0016:
00055d 3010      	CPI  R17,0
00055e f421      	BRNE _0x20A0018
00055f d12c      	RCALL SUBOPT_0x21
000560 e3e0      	LDI  R30,LOW(48)
000561 93ec      	ST   X,R30
000562 c01d      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
000563 2fe1      	MOV  R30,R17
000564 5011      	SUBI R17,1
000565 30e0      	CPI  R30,0
000566 f0c9      	BREQ _0x20A001C
000567 d12b      	RCALL SUBOPT_0x22
000568 d08c      	RCALL SUBOPT_0xA
000569 d084      	RCALL SUBOPT_0x9
00056a 01df      	MOVW R26,R30
00056b 01cb      	MOVW R24,R22
00056c 940e 04f3 	CALL _floor
00056e d129      	RCALL SUBOPT_0x23
00056f d12d      	RCALL SUBOPT_0x24
000570 940e 07f9 	CALL __DIVF21
000572 940e 06e8 	CALL __CFD1U
000574 2f0e      	MOV  R16,R30
000575 d116      	RCALL SUBOPT_0x21
000576 d08c      	RCALL SUBOPT_0xC
000577 e0f0      	LDI  R31,0
000578 d11a      	RCALL SUBOPT_0x22
000579 d02b      	RCALL SUBOPT_0x0
00057a 940e 07ab 	CALL __MULF12
00057c d129      	RCALL SUBOPT_0x25
00057d d08a      	RCALL SUBOPT_0xD
00057e d108      	RCALL SUBOPT_0x20
00057f cfe3      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
000580 85e8      	LDD  R30,Y+8
000581 30e0      	CPI  R30,0
000582 f0d1      	BREQ _0x20C0001
000583 d108      	RCALL SUBOPT_0x21
000584 e2ee      	LDI  R30,LOW(46)
000585 93ec      	ST   X,R30
                 _0x20A001E:
000586 85e8      	LDD  R30,Y+8
000587 50e1      	SUBI R30,LOW(1)
000588 87e8      	STD  Y+8,R30
000589 5fef      	SUBI R30,-LOW(1)
00058a f091      	BREQ _0x20A0020
00058b d11a      	RCALL SUBOPT_0x25
00058c d055      	RCALL SUBOPT_0x7
00058d d0f9      	RCALL SUBOPT_0x20
                +
00058e 85e9     +LDD R30 , Y + 9
00058f 85fa     +LDD R31 , Y + 9 + 1
000590 856b     +LDD R22 , Y + 9 + 2
000591 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000592 940e 06e8 	CALL __CFD1U
000594 2f0e      	MOV  R16,R30
000595 d0f6      	RCALL SUBOPT_0x21
000596 d06c      	RCALL SUBOPT_0xC
000597 e0f0      	LDI  R31,0
000598 d10d      	RCALL SUBOPT_0x25
000599 d00b      	RCALL SUBOPT_0x0
00059a d06d      	RCALL SUBOPT_0xD
00059b d0eb      	RCALL SUBOPT_0x20
00059c cfe9      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
00059d 81ae      	LDD  R26,Y+6
00059e 81bf      	LDD  R27,Y+6+1
00059f e0e0      	LDI  R30,LOW(0)
0005a0 93ec      	ST   X,R30
                 _0x20C0002:
0005a1 8119      	LDD  R17,Y+1
0005a2 8108      	LDD  R16,Y+0
0005a3 962d      	ADIW R28,13
0005a4 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _st:
000160           	.BYTE 0xA
                 __base_y_G101:
00016a           	.BYTE 0x4
                 __seed_G105:
00016e           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0005a5 940e 0870 	CALL __CWD1
0005a7 940e 0721 	CALL __CDF1
0005a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
0005aa 91ed      	LD   R30,X+
0005ab 91fd      	LD   R31,X+
0005ac 9631      	ADIW R30,1
0005ad 93fe      	ST   -X,R31
0005ae 93ee      	ST   -X,R30
0005af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2:
0005b0 93ba      	ST   -Y,R27
0005b1 93aa      	ST   -Y,R26
0005b2 9724      	SBIW R28,4
0005b3 e0e0      	LDI  R30,LOW(0)
0005b4 83e8      	ST   Y,R30
0005b5 83e9      	STD  Y+1,R30
0005b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x3:
                +
0005b7 81ac     +LDD R26 , Y + 4
0005b8 81bd     +LDD R27 , Y + 4 + 1
0005b9 818e     +LDD R24 , Y + 4 + 2
0005ba 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0005bb e0e0     +LDI R30 , LOW ( 0x41200000 )
0005bc e0f0     +LDI R31 , HIGH ( 0x41200000 )
0005bd e260     +LDI R22 , BYTE3 ( 0x41200000 )
0005be e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0005bf 940e 07ab 	CALL __MULF12
                +
0005c1 83ec     +STD Y + 4 , R30
0005c2 83fd     +STD Y + 4 + 1 , R31
0005c3 836e     +STD Y + 4 + 2 , R22
0005c4 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0005c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x4:
                +
0005c6 81ec     +LDD R30 , Y + 4
0005c7 81fd     +LDD R31 , Y + 4 + 1
0005c8 816e     +LDD R22 , Y + 4 + 2
0005c9 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0005ca 85ac     +LDD R26 , Y + 12
0005cb 85bd     +LDD R27 , Y + 12 + 1
0005cc 858e     +LDD R24 , Y + 12 + 2
0005cd 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0005ce 940e 083e 	CALL __CMPF12
0005d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5:
                +
0005d1 85ac     +LDD R26 , Y + 12
0005d2 85bd     +LDD R27 , Y + 12 + 1
0005d3 858e     +LDD R24 , Y + 12 + 2
0005d4 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0005d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
                +
0005d6 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0005d7 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0005d8 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0005d9 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0005da 940e 07ab 	CALL __MULF12
                +
0005dc 87ec     +STD Y + 12 , R30
0005dd 87fd     +STD Y + 12 + 1 , R31
0005de 876e     +STD Y + 12 + 2 , R22
0005df 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0005e0 5f3f      	SUBI R19,-LOW(1)
0005e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
                +
0005e2 e0e0     +LDI R30 , LOW ( 0x41200000 )
0005e3 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0005e4 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0005e5 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0005e6 940e 07ab 	CALL __MULF12
0005e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
                +
0005e9 87ec     +STD Y + 12 , R30
0005ea 87fd     +STD Y + 12 + 1 , R31
0005eb 876e     +STD Y + 12 + 2 , R22
0005ec 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0005ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
                +
0005ee e0a0     +LDI R26 , LOW ( 0x3F000000 )
0005ef e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0005f0 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0005f1 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0005f2 940e 075b 	CALL __ADDF12
0005f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
                +
0005f5 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0005f6 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0005f7 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0005f8 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0005f9 940e 07ab 	CALL __MULF12
0005fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
0005fc 85a8      	LDD  R26,Y+8
0005fd 85b9      	LDD  R27,Y+8+1
0005fe 9611      	ADIW R26,1
0005ff 87a8      	STD  Y+8,R26
000600 87b9      	STD  Y+8+1,R27
000601 9711      	SBIW R26,1
000602 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
000603 2fe0      	MOV  R30,R16
000604 5de0      	SUBI R30,-LOW(48)
000605 93ec      	ST   X,R30
000606 2fe0      	MOV  R30,R16
000607 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000608 940e 08ec 	CALL __SWAPD12
00060a 940e 0754 	CALL __SUBF12
00060c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xE:
00060d 85e8      	LDD  R30,Y+8
00060e 85f9      	LDD  R31,Y+8+1
00060f 9631      	ADIW R30,1
000610 87e8      	STD  Y+8,R30
000611 87f9      	STD  Y+8+1,R31
000612 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xF:
000613 932a      	ST   -Y,R18
000614 81af      	LDD  R26,Y+7
000615 85b8      	LDD  R27,Y+7+1
000616 85e9      	LDD  R30,Y+9
000617 85fa      	LDD  R31,Y+9+1
000618 9509      	ICALL
000619 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x10:
                +
00061a 01fe     +MOVW R30 , R28
00061b 5ae6     +SUBI R30 , LOW ( - 90 )
00061c 4fff     +SBCI R31 , HIGH ( - 90 )
00061d 9001     +LD R0 , Z +
00061e 81f0     +LD R31 , Z
00061f 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000620 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x11:
000621 9734      	SBIW R30,4
                +
000622 01de     +MOVW R26 , R28
000623 5aa6     +SUBI R26 , LOW ( - 90 )
000624 4fbf     +SBCI R27 , HIGH ( - 90 )
000625 93ed     +ST X + , R30
000626 93fc     +ST X , R31
                 	__PUTW1SX 90
000627 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x12:
000628 81af      	LDD  R26,Y+7
000629 85b8      	LDD  R27,Y+7+1
00062a 85e9      	LDD  R30,Y+9
00062b 85fa      	LDD  R31,Y+9+1
00062c 9509      	ICALL
00062d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x13:
                +
00062e 01de     +MOVW R26 , R28
00062f 5aa6     +SUBI R26 , LOW ( - 90 )
000630 4fbf     +SBCI R27 , HIGH ( - 90 )
000631 900d     +LD R0 , X +
000632 91bc     +LD R27 , X
000633 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000634 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
                +
000635 87ea     +STD Y + 10 , R30
000636 87fb     +STD Y + 10 + 1 , R31
000637 876c     +STD Y + 10 + 2 , R22
000638 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000639 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15:
00063a dfdf      	RCALL SUBOPT_0x10
00063b cfe5      	RJMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16:
                +
00063c 85ea     +LDD R30 , Y + 10
00063d 85fb     +LDD R31 , Y + 10 + 1
00063e 856c     +LDD R22 , Y + 10 + 2
00063f 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000640 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x17:
000641 87ee      	STD  Y+14,R30
000642 87ff      	STD  Y+14+1,R31
000643 85ae      	LDD  R26,Y+14
000644 85bf      	LDD  R27,Y+14+1
000645 940e 04a9 	CALL _strlen
000647 2f1e      	MOV  R17,R30
000648 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x18:
000649 dfe4      	RCALL SUBOPT_0x13
00064a 9614      	ADIW R26,4
00064b 940e 08c9 	CALL __GETW1P
00064d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19:
                +
00064e 8be8     +STD Y + 16 , R30
00064f 8bf9     +STD Y + 16 + 1 , R31
000650 8b6a     +STD Y + 16 + 2 , R22
000651 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000652 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1A:
000653 7f0b      	ANDI R16,LOW(251)
000654 89ed      	LDD  R30,Y+21
000655 93ea      	ST   -Y,R30
                +
000656 01de     +MOVW R26 , R28
000657 5aa9     +SUBI R26 , LOW ( - 87 )
000658 4fbf     +SBCI R27 , HIGH ( - 87 )
000659 900d     +LD R0 , X +
00065a 91bc     +LD R27 , X
00065b 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
00065c 01fe     +MOVW R30 , R28
00065d 5ae7     +SUBI R30 , LOW ( - 89 )
00065e 4fff     +SBCI R31 , HIGH ( - 89 )
00065f 9001     +LD R0 , Z +
000660 81f0     +LD R31 , Z
000661 2de0     +MOV R30 , R0
                 	__GETW1SX 89
000662 9509      	ICALL
000663 3050      	CPI  R21,0
000664 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
                +
000665 89e8     +LDD R30 , Y + 16
000666 89f9     +LDD R31 , Y + 16 + 1
000667 896a     +LDD R22 , Y + 16 + 2
000668 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000669 85aa     +LDD R26 , Y + 10
00066a 85bb     +LDD R27 , Y + 10 + 1
00066b 858c     +LDD R24 , Y + 10 + 2
00066c 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00066d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
00066e 01de      	MOVW R26,R28
00066f 961c      	ADIW R26,12
000670 940e 085e 	CALL __ADDW2R15
000672 940e 08c9 	CALL __GETW1P
000674 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
000675 940e 0424 	CALL __lcd_write_data
000677 e0a3      	LDI  R26,LOW(3)
000678 e0b0      	LDI  R27,0
000679 940c 06ab 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E:
00067b e3a0      	LDI  R26,LOW(48)
00067c 940e 0410 	CALL __lcd_write_nibble_G101
                +
00067e e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
00067f 958a     +DEC R24
000680 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000681 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
000682 81ee      	LDD  R30,Y+6
000683 81ff      	LDD  R31,Y+6+1
000684 93fa      	ST   -Y,R31
000685 93ea      	ST   -Y,R30
000686 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20:
                +
000687 87e9     +STD Y + 9 , R30
000688 87fa     +STD Y + 9 + 1 , R31
000689 876b     +STD Y + 9 + 2 , R22
00068a 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00068b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x21:
00068c 81ae      	LDD  R26,Y+6
00068d 81bf      	LDD  R27,Y+6+1
00068e 9611      	ADIW R26,1
00068f 83ae      	STD  Y+6,R26
000690 83bf      	STD  Y+6+1,R27
000691 9711      	SBIW R26,1
000692 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
                +
000693 81aa     +LDD R26 , Y + 2
000694 81bb     +LDD R27 , Y + 2 + 1
000695 818c     +LDD R24 , Y + 2 + 2
000696 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000697 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23:
                +
000698 83ea     +STD Y + 2 , R30
000699 83fb     +STD Y + 2 + 1 , R31
00069a 836c     +STD Y + 2 + 2 , R22
00069b 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00069c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x24:
                +
00069d 81ea     +LDD R30 , Y + 2
00069e 81fb     +LDD R31 , Y + 2 + 1
00069f 816c     +LDD R22 , Y + 2 + 2
0006a0 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
0006a1 85a9     +LDD R26 , Y + 9
0006a2 85ba     +LDD R27 , Y + 9 + 1
0006a3 858b     +LDD R24 , Y + 9 + 2
0006a4 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0006a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
                +
0006a6 85a9     +LDD R26 , Y + 9
0006a7 85ba     +LDD R27 , Y + 9 + 1
0006a8 858b     +LDD R24 , Y + 9 + 2
0006a9 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0006aa 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0006ab 9610      	adiw r26,0
0006ac f039      	breq __delay_ms1
                 __delay_ms0:
0006ad 95a8      	wdr
                +
0006ae ef8a     +LDI R24 , LOW ( 0xFA )
0006af e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
0006b0 9701     +SBIW R24 , 1
0006b1 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
0006b2 9711      	sbiw r26,1
0006b3 f7c9      	brne __delay_ms0
                 __delay_ms1:
0006b4 9508      	ret
                 
                 __ANEGF1:
0006b5 9730      	SBIW R30,0
0006b6 4060      	SBCI R22,0
0006b7 4070      	SBCI R23,0
0006b8 f009      	BREQ __ANEGF10
0006b9 5870      	SUBI R23,0x80
                 __ANEGF10:
0006ba 9508      	RET
                 
                 __ROUND_REPACK:
0006bb 2355      	TST  R21
0006bc f442      	BRPL __REPACK
0006bd 3850      	CPI  R21,0x80
0006be f411      	BRNE __ROUND_REPACK0
0006bf ffe0      	SBRS R30,0
0006c0 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0006c1 9631      	ADIW R30,1
0006c2 1f69      	ADC  R22,R25
0006c3 1f79      	ADC  R23,R25
0006c4 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0006c5 e850      	LDI  R21,0x80
0006c6 2757      	EOR  R21,R23
0006c7 f411      	BRNE __REPACK0
0006c8 935f      	PUSH R21
0006c9 c0cf      	RJMP __ZERORES
                 __REPACK0:
0006ca 3f5f      	CPI  R21,0xFF
0006cb f031      	BREQ __REPACK1
0006cc 0f66      	LSL  R22
0006cd 0c00      	LSL  R0
0006ce 9557      	ROR  R21
0006cf 9567      	ROR  R22
0006d0 2f75      	MOV  R23,R21
0006d1 9508      	RET
                 __REPACK1:
0006d2 935f      	PUSH R21
0006d3 2000      	TST  R0
0006d4 f00a      	BRMI __REPACK2
0006d5 c0cf      	RJMP __MAXRES
                 __REPACK2:
0006d6 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0006d7 e850      	LDI  R21,0x80
0006d8 2e19      	MOV  R1,R25
0006d9 2215      	AND  R1,R21
0006da 0f88      	LSL  R24
0006db 1f99      	ROL  R25
0006dc 2795      	EOR  R25,R21
0006dd 0f55      	LSL  R21
0006de 9587      	ROR  R24
                 
                 __UNPACK1:
0006df e850      	LDI  R21,0x80
0006e0 2e07      	MOV  R0,R23
0006e1 2205      	AND  R0,R21
0006e2 0f66      	LSL  R22
0006e3 1f77      	ROL  R23
0006e4 2775      	EOR  R23,R21
0006e5 0f55      	LSL  R21
0006e6 9567      	ROR  R22
0006e7 9508      	RET
                 
                 __CFD1U:
0006e8 9468      	SET
0006e9 c001      	RJMP __CFD1U0
                 __CFD1:
0006ea 94e8      	CLT
                 __CFD1U0:
0006eb 935f      	PUSH R21
0006ec dff2      	RCALL __UNPACK1
0006ed 3870      	CPI  R23,0x80
0006ee f018      	BRLO __CFD10
0006ef 3f7f      	CPI  R23,0xFF
0006f0 f408      	BRCC __CFD10
0006f1 c0a7      	RJMP __ZERORES
                 __CFD10:
0006f2 e156      	LDI  R21,22
0006f3 1b57      	SUB  R21,R23
0006f4 f4aa      	BRPL __CFD11
0006f5 9551      	NEG  R21
0006f6 3058      	CPI  R21,8
0006f7 f40e      	BRTC __CFD19
0006f8 3059      	CPI  R21,9
                 __CFD19:
0006f9 f030      	BRLO __CFD17
0006fa efef      	SER  R30
0006fb efff      	SER  R31
0006fc ef6f      	SER  R22
0006fd e77f      	LDI  R23,0x7F
0006fe f977      	BLD  R23,7
0006ff c01a      	RJMP __CFD15
                 __CFD17:
000700 2777      	CLR  R23
000701 2355      	TST  R21
000702 f0b9      	BREQ __CFD15
                 __CFD18:
000703 0fee      	LSL  R30
000704 1fff      	ROL  R31
000705 1f66      	ROL  R22
000706 1f77      	ROL  R23
000707 955a      	DEC  R21
000708 f7d1      	BRNE __CFD18
000709 c010      	RJMP __CFD15
                 __CFD11:
00070a 2777      	CLR  R23
                 __CFD12:
00070b 3058      	CPI  R21,8
00070c f028      	BRLO __CFD13
00070d 2fef      	MOV  R30,R31
00070e 2ff6      	MOV  R31,R22
00070f 2f67      	MOV  R22,R23
000710 5058      	SUBI R21,8
000711 cff9      	RJMP __CFD12
                 __CFD13:
000712 2355      	TST  R21
000713 f031      	BREQ __CFD15
                 __CFD14:
000714 9576      	LSR  R23
000715 9567      	ROR  R22
000716 95f7      	ROR  R31
000717 95e7      	ROR  R30
000718 955a      	DEC  R21
000719 f7d1      	BRNE __CFD14
                 __CFD15:
00071a 2000      	TST  R0
00071b f40a      	BRPL __CFD16
00071c d145      	RCALL __ANEGD1
                 __CFD16:
00071d 915f      	POP  R21
00071e 9508      	RET
                 
                 __CDF1U:
00071f 9468      	SET
000720 c001      	RJMP __CDF1U0
                 __CDF1:
000721 94e8      	CLT
                 __CDF1U0:
000722 9730      	SBIW R30,0
000723 4060      	SBCI R22,0
000724 4070      	SBCI R23,0
000725 f0b1      	BREQ __CDF10
000726 2400      	CLR  R0
000727 f026      	BRTS __CDF11
000728 2377      	TST  R23
000729 f412      	BRPL __CDF11
00072a 9400      	COM  R0
00072b d136      	RCALL __ANEGD1
                 __CDF11:
00072c 2e17      	MOV  R1,R23
00072d e17e      	LDI  R23,30
00072e 2011      	TST  R1
                 __CDF12:
00072f f032      	BRMI __CDF13
000730 957a      	DEC  R23
000731 0fee      	LSL  R30
000732 1fff      	ROL  R31
000733 1f66      	ROL  R22
000734 1c11      	ROL  R1
000735 cff9      	RJMP __CDF12
                 __CDF13:
000736 2fef      	MOV  R30,R31
000737 2ff6      	MOV  R31,R22
000738 2d61      	MOV  R22,R1
000739 935f      	PUSH R21
00073a df8a      	RCALL __REPACK
00073b 915f      	POP  R21
                 __CDF10:
00073c 9508      	RET
                 
                 __SWAPACC:
00073d 934f      	PUSH R20
00073e 01af      	MOVW R20,R30
00073f 01fd      	MOVW R30,R26
000740 01da      	MOVW R26,R20
000741 01ab      	MOVW R20,R22
000742 01bc      	MOVW R22,R24
000743 01ca      	MOVW R24,R20
000744 2d40      	MOV  R20,R0
000745 2c01      	MOV  R0,R1
000746 2e14      	MOV  R1,R20
000747 914f      	POP  R20
000748 9508      	RET
                 
                 __UADD12:
000749 0fea      	ADD  R30,R26
00074a 1ffb      	ADC  R31,R27
00074b 1f68      	ADC  R22,R24
00074c 9508      	RET
                 
                 __NEGMAN1:
00074d 95e0      	COM  R30
00074e 95f0      	COM  R31
00074f 9560      	COM  R22
000750 5fef      	SUBI R30,-1
000751 4fff      	SBCI R31,-1
000752 4f6f      	SBCI R22,-1
000753 9508      	RET
                 
                 __SUBF12:
000754 935f      	PUSH R21
000755 df81      	RCALL __UNPACK
000756 3890      	CPI  R25,0x80
000757 f171      	BREQ __ADDF129
000758 e850      	LDI  R21,0x80
000759 2615      	EOR  R1,R21
                 
00075a c004      	RJMP __ADDF120
                 
                 __ADDF12:
00075b 935f      	PUSH R21
00075c df7a      	RCALL __UNPACK
00075d 3890      	CPI  R25,0x80
00075e f139      	BREQ __ADDF129
                 
                 __ADDF120:
00075f 3870      	CPI  R23,0x80
000760 f121      	BREQ __ADDF128
                 __ADDF121:
000761 2f57      	MOV  R21,R23
000762 1b59      	SUB  R21,R25
000763 f12b      	BRVS __ADDF1211
000764 f412      	BRPL __ADDF122
000765 dfd7      	RCALL __SWAPACC
000766 cffa      	RJMP __ADDF121
                 __ADDF122:
000767 3158      	CPI  R21,24
000768 f018      	BRLO __ADDF123
000769 27aa      	CLR  R26
00076a 27bb      	CLR  R27
00076b 2788      	CLR  R24
                 __ADDF123:
00076c 3058      	CPI  R21,8
00076d f028      	BRLO __ADDF124
00076e 2fab      	MOV  R26,R27
00076f 2fb8      	MOV  R27,R24
000770 2788      	CLR  R24
000771 5058      	SUBI R21,8
000772 cff9      	RJMP __ADDF123
                 __ADDF124:
000773 2355      	TST  R21
000774 f029      	BREQ __ADDF126
                 __ADDF125:
000775 9586      	LSR  R24
000776 95b7      	ROR  R27
000777 95a7      	ROR  R26
000778 955a      	DEC  R21
000779 f7d9      	BRNE __ADDF125
                 __ADDF126:
00077a 2d50      	MOV  R21,R0
00077b 2551      	EOR  R21,R1
00077c f072      	BRMI __ADDF127
00077d dfcb      	RCALL __UADD12
00077e f438      	BRCC __ADDF129
00077f 9567      	ROR  R22
000780 95f7      	ROR  R31
000781 95e7      	ROR  R30
000782 9573      	INC  R23
000783 f413      	BRVC __ADDF129
000784 c020      	RJMP __MAXRES
                 __ADDF128:
000785 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000786 df3e      	RCALL __REPACK
000787 915f      	POP  R21
000788 9508      	RET
                 __ADDF1211:
000789 f7d8      	BRCC __ADDF128
00078a cffb      	RJMP __ADDF129
                 __ADDF127:
00078b 1bea      	SUB  R30,R26
00078c 0bfb      	SBC  R31,R27
00078d 0b68      	SBC  R22,R24
00078e f051      	BREQ __ZERORES
00078f f410      	BRCC __ADDF1210
000790 9400      	COM  R0
000791 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000792 2366      	TST  R22
000793 f392      	BRMI __ADDF129
000794 0fee      	LSL  R30
000795 1fff      	ROL  R31
000796 1f66      	ROL  R22
000797 957a      	DEC  R23
000798 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000799 27ee      	CLR  R30
00079a 27ff      	CLR  R31
00079b 2766      	CLR  R22
00079c 2777      	CLR  R23
00079d 915f      	POP  R21
00079e 9508      	RET
                 
                 __MINRES:
00079f efef      	SER  R30
0007a0 efff      	SER  R31
0007a1 e76f      	LDI  R22,0x7F
0007a2 ef7f      	SER  R23
0007a3 915f      	POP  R21
0007a4 9508      	RET
                 
                 __MAXRES:
0007a5 efef      	SER  R30
0007a6 efff      	SER  R31
0007a7 e76f      	LDI  R22,0x7F
0007a8 e77f      	LDI  R23,0x7F
0007a9 915f      	POP  R21
0007aa 9508      	RET
                 
                 __MULF12:
0007ab 935f      	PUSH R21
0007ac df2a      	RCALL __UNPACK
0007ad 3870      	CPI  R23,0x80
0007ae f351      	BREQ __ZERORES
0007af 3890      	CPI  R25,0x80
0007b0 f341      	BREQ __ZERORES
0007b1 2401      	EOR  R0,R1
0007b2 9408      	SEC
0007b3 1f79      	ADC  R23,R25
0007b4 f423      	BRVC __MULF124
0007b5 f31c      	BRLT __ZERORES
                 __MULF125:
0007b6 2000      	TST  R0
0007b7 f33a      	BRMI __MINRES
0007b8 cfec      	RJMP __MAXRES
                 __MULF124:
0007b9 920f      	PUSH R0
0007ba 931f      	PUSH R17
0007bb 932f      	PUSH R18
0007bc 933f      	PUSH R19
0007bd 934f      	PUSH R20
0007be 2711      	CLR  R17
0007bf 2722      	CLR  R18
0007c0 2799      	CLR  R25
0007c1 9f68      	MUL  R22,R24
0007c2 01a0      	MOVW R20,R0
0007c3 9f8f      	MUL  R24,R31
0007c4 2d30      	MOV  R19,R0
0007c5 0d41      	ADD  R20,R1
0007c6 1f59      	ADC  R21,R25
0007c7 9f6b      	MUL  R22,R27
0007c8 0d30      	ADD  R19,R0
0007c9 1d41      	ADC  R20,R1
0007ca 1f59      	ADC  R21,R25
0007cb 9f8e      	MUL  R24,R30
0007cc d027      	RCALL __MULF126
0007cd 9fbf      	MUL  R27,R31
0007ce d025      	RCALL __MULF126
0007cf 9f6a      	MUL  R22,R26
0007d0 d023      	RCALL __MULF126
0007d1 9fbe      	MUL  R27,R30
0007d2 d01d      	RCALL __MULF127
0007d3 9faf      	MUL  R26,R31
0007d4 d01b      	RCALL __MULF127
0007d5 9fae      	MUL  R26,R30
0007d6 0d11      	ADD  R17,R1
0007d7 1f29      	ADC  R18,R25
0007d8 1f39      	ADC  R19,R25
0007d9 1f49      	ADC  R20,R25
0007da 1f59      	ADC  R21,R25
0007db 2fe3      	MOV  R30,R19
0007dc 2ff4      	MOV  R31,R20
0007dd 2f65      	MOV  R22,R21
0007de 2f52      	MOV  R21,R18
0007df 914f      	POP  R20
0007e0 913f      	POP  R19
0007e1 912f      	POP  R18
0007e2 911f      	POP  R17
0007e3 900f      	POP  R0
0007e4 2366      	TST  R22
0007e5 f02a      	BRMI __MULF122
0007e6 0f55      	LSL  R21
0007e7 1fee      	ROL  R30
0007e8 1fff      	ROL  R31
0007e9 1f66      	ROL  R22
0007ea c002      	RJMP __MULF123
                 __MULF122:
0007eb 9573      	INC  R23
0007ec f24b      	BRVS __MULF125
                 __MULF123:
0007ed decd      	RCALL __ROUND_REPACK
0007ee 915f      	POP  R21
0007ef 9508      	RET
                 
                 __MULF127:
0007f0 0d10      	ADD  R17,R0
0007f1 1d21      	ADC  R18,R1
0007f2 1f39      	ADC  R19,R25
0007f3 c002      	RJMP __MULF128
                 __MULF126:
0007f4 0d20      	ADD  R18,R0
0007f5 1d31      	ADC  R19,R1
                 __MULF128:
0007f6 1f49      	ADC  R20,R25
0007f7 1f59      	ADC  R21,R25
0007f8 9508      	RET
                 
                 __DIVF21:
0007f9 935f      	PUSH R21
0007fa dedc      	RCALL __UNPACK
0007fb 3870      	CPI  R23,0x80
0007fc f421      	BRNE __DIVF210
0007fd 2011      	TST  R1
                 __DIVF211:
0007fe f40a      	BRPL __DIVF219
0007ff cf9f      	RJMP __MINRES
                 __DIVF219:
000800 cfa4      	RJMP __MAXRES
                 __DIVF210:
000801 3890      	CPI  R25,0x80
000802 f409      	BRNE __DIVF218
                 __DIVF217:
000803 cf95      	RJMP __ZERORES
                 __DIVF218:
000804 2401      	EOR  R0,R1
000805 9408      	SEC
000806 0b97      	SBC  R25,R23
000807 f41b      	BRVC __DIVF216
000808 f3d4      	BRLT __DIVF217
000809 2000      	TST  R0
00080a cff3      	RJMP __DIVF211
                 __DIVF216:
00080b 2f79      	MOV  R23,R25
00080c 931f      	PUSH R17
00080d 932f      	PUSH R18
00080e 933f      	PUSH R19
00080f 934f      	PUSH R20
000810 2411      	CLR  R1
000811 2711      	CLR  R17
000812 2722      	CLR  R18
000813 2733      	CLR  R19
000814 2744      	CLR  R20
000815 2755      	CLR  R21
000816 e290      	LDI  R25,32
                 __DIVF212:
000817 17ae      	CP   R26,R30
000818 07bf      	CPC  R27,R31
000819 0786      	CPC  R24,R22
00081a 0741      	CPC  R20,R17
00081b f030      	BRLO __DIVF213
00081c 1bae      	SUB  R26,R30
00081d 0bbf      	SBC  R27,R31
00081e 0b86      	SBC  R24,R22
00081f 0b41      	SBC  R20,R17
000820 9408      	SEC
000821 c001      	RJMP __DIVF214
                 __DIVF213:
000822 9488      	CLC
                 __DIVF214:
000823 1f55      	ROL  R21
000824 1f22      	ROL  R18
000825 1f33      	ROL  R19
000826 1c11      	ROL  R1
000827 1faa      	ROL  R26
000828 1fbb      	ROL  R27
000829 1f88      	ROL  R24
00082a 1f44      	ROL  R20
00082b 959a      	DEC  R25
00082c f751      	BRNE __DIVF212
00082d 01f9      	MOVW R30,R18
00082e 2d61      	MOV  R22,R1
00082f 914f      	POP  R20
000830 913f      	POP  R19
000831 912f      	POP  R18
000832 911f      	POP  R17
000833 2366      	TST  R22
000834 f032      	BRMI __DIVF215
000835 0f55      	LSL  R21
000836 1fee      	ROL  R30
000837 1fff      	ROL  R31
000838 1f66      	ROL  R22
000839 957a      	DEC  R23
00083a f243      	BRVS __DIVF217
                 __DIVF215:
00083b de7f      	RCALL __ROUND_REPACK
00083c 915f      	POP  R21
00083d 9508      	RET
                 
                 __CMPF12:
00083e 2399      	TST  R25
00083f f09a      	BRMI __CMPF120
000840 2377      	TST  R23
000841 f042      	BRMI __CMPF121
000842 1797      	CP   R25,R23
000843 f048      	BRLO __CMPF122
000844 f429      	BRNE __CMPF121
000845 17ae      	CP   R26,R30
000846 07bf      	CPC  R27,R31
000847 0786      	CPC  R24,R22
000848 f020      	BRLO __CMPF122
000849 f031      	BREQ __CMPF123
                 __CMPF121:
00084a 9498      	CLZ
00084b 9488      	CLC
00084c 9508      	RET
                 __CMPF122:
00084d 9498      	CLZ
00084e 9408      	SEC
00084f 9508      	RET
                 __CMPF123:
000850 9418      	SEZ
000851 9488      	CLC
000852 9508      	RET
                 __CMPF120:
000853 2377      	TST  R23
000854 f7c2      	BRPL __CMPF122
000855 1797      	CP   R25,R23
000856 f398      	BRLO __CMPF121
000857 f7a9      	BRNE __CMPF122
000858 17ea      	CP   R30,R26
000859 07fb      	CPC  R31,R27
00085a 0768      	CPC  R22,R24
00085b f388      	BRLO __CMPF122
00085c f399      	BREQ __CMPF123
00085d cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00085e 2400      	CLR  R0
00085f 0daf      	ADD  R26,R15
000860 1db0      	ADC  R27,R0
000861 9508      	RET
                 
                 __ANEGD1:
000862 95f0      	COM  R31
000863 9560      	COM  R22
000864 9570      	COM  R23
000865 95e1      	NEG  R30
000866 4fff      	SBCI R31,-1
000867 4f6f      	SBCI R22,-1
000868 4f7f      	SBCI R23,-1
000869 9508      	RET
                 
                 __CBD1:
00086a 2ffe      	MOV  R31,R30
00086b 0fff      	ADD  R31,R31
00086c 0bff      	SBC  R31,R31
00086d 2f6f      	MOV  R22,R31
00086e 2f7f      	MOV  R23,R31
00086f 9508      	RET
                 
                 __CWD1:
000870 2f6f      	MOV  R22,R31
000871 0f66      	ADD  R22,R22
000872 0b66      	SBC  R22,R22
000873 2f76      	MOV  R23,R22
000874 9508      	RET
                 
                 __DIVB21U:
000875 2400      	CLR  R0
000876 e098      	LDI  R25,8
                 __DIVB21U1:
000877 0faa      	LSL  R26
000878 1c00      	ROL  R0
000879 1a0e      	SUB  R0,R30
00087a f410      	BRCC __DIVB21U2
00087b 0e0e      	ADD  R0,R30
00087c c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00087d 60a1      	SBR  R26,1
                 __DIVB21U3:
00087e 959a      	DEC  R25
00087f f7b9      	BRNE __DIVB21U1
000880 2fea      	MOV  R30,R26
000881 2da0      	MOV  R26,R0
000882 9508      	RET
                 
                 __DIVB21:
000883 d039      	RCALL __CHKSIGNB
000884 dff0      	RCALL __DIVB21U
000885 f40e      	BRTC __DIVB211
000886 95e1      	NEG  R30
                 __DIVB211:
000887 9508      	RET
                 
                 __DIVD21U:
000888 933f      	PUSH R19
000889 934f      	PUSH R20
00088a 935f      	PUSH R21
00088b 2400      	CLR  R0
00088c 2411      	CLR  R1
00088d 2744      	CLR  R20
00088e 2755      	CLR  R21
00088f e230      	LDI  R19,32
                 __DIVD21U1:
000890 0faa      	LSL  R26
000891 1fbb      	ROL  R27
000892 1f88      	ROL  R24
000893 1f99      	ROL  R25
000894 1c00      	ROL  R0
000895 1c11      	ROL  R1
000896 1f44      	ROL  R20
000897 1f55      	ROL  R21
000898 1a0e      	SUB  R0,R30
000899 0a1f      	SBC  R1,R31
00089a 0b46      	SBC  R20,R22
00089b 0b57      	SBC  R21,R23
00089c f428      	BRCC __DIVD21U2
00089d 0e0e      	ADD  R0,R30
00089e 1e1f      	ADC  R1,R31
00089f 1f46      	ADC  R20,R22
0008a0 1f57      	ADC  R21,R23
0008a1 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0008a2 60a1      	SBR  R26,1
                 __DIVD21U3:
0008a3 953a      	DEC  R19
0008a4 f759      	BRNE __DIVD21U1
0008a5 01fd      	MOVW R30,R26
0008a6 01bc      	MOVW R22,R24
0008a7 01d0      	MOVW R26,R0
0008a8 01ca      	MOVW R24,R20
0008a9 915f      	POP  R21
0008aa 914f      	POP  R20
0008ab 913f      	POP  R19
0008ac 9508      	RET
                 
                 __MODB21:
0008ad 94e8      	CLT
0008ae ffa7      	SBRS R26,7
0008af c002      	RJMP __MODB211
0008b0 95a1      	NEG  R26
0008b1 9468      	SET
                 __MODB211:
0008b2 fde7      	SBRC R30,7
0008b3 95e1      	NEG  R30
0008b4 dfc0      	RCALL __DIVB21U
0008b5 2fea      	MOV  R30,R26
0008b6 f40e      	BRTC __MODB212
0008b7 95e1      	NEG  R30
                 __MODB212:
0008b8 9508      	RET
                 
                 __MODD21U:
0008b9 dfce      	RCALL __DIVD21U
0008ba 01fd      	MOVW R30,R26
0008bb 01bc      	MOVW R22,R24
0008bc 9508      	RET
                 
                 __CHKSIGNB:
0008bd 94e8      	CLT
0008be ffe7      	SBRS R30,7
0008bf c002      	RJMP __CHKSB1
0008c0 95e1      	NEG  R30
0008c1 9468      	SET
                 __CHKSB1:
0008c2 ffa7      	SBRS R26,7
0008c3 c004      	RJMP __CHKSB2
0008c4 95a1      	NEG  R26
0008c5 f800      	BLD  R0,0
0008c6 9403      	INC  R0
0008c7 fa00      	BST  R0,0
                 __CHKSB2:
0008c8 9508      	RET
                 
                 __GETW1P:
0008c9 91ed      	LD   R30,X+
0008ca 91fc      	LD   R31,X
0008cb 9711      	SBIW R26,1
0008cc 9508      	RET
                 
                 __GETD1P:
0008cd 91ed      	LD   R30,X+
0008ce 91fd      	LD   R31,X+
0008cf 916d      	LD   R22,X+
0008d0 917c      	LD   R23,X
0008d1 9713      	SBIW R26,3
0008d2 9508      	RET
                 
                 __GETD1S0:
0008d3 81e8      	LD   R30,Y
0008d4 81f9      	LDD  R31,Y+1
0008d5 816a      	LDD  R22,Y+2
0008d6 817b      	LDD  R23,Y+3
0008d7 9508      	RET
                 
                 __GETD2S0:
0008d8 81a8      	LD   R26,Y
0008d9 81b9      	LDD  R27,Y+1
0008da 818a      	LDD  R24,Y+2
0008db 819b      	LDD  R25,Y+3
0008dc 9508      	RET
                 
                 __PUTD1S0:
0008dd 83e8      	ST   Y,R30
0008de 83f9      	STD  Y+1,R31
0008df 836a      	STD  Y+2,R22
0008e0 837b      	STD  Y+3,R23
0008e1 9508      	RET
                 
                 __PUTPARD1:
0008e2 937a      	ST   -Y,R23
0008e3 936a      	ST   -Y,R22
0008e4 93fa      	ST   -Y,R31
0008e5 93ea      	ST   -Y,R30
0008e6 9508      	RET
                 
                 __PUTPARD2:
0008e7 939a      	ST   -Y,R25
0008e8 938a      	ST   -Y,R24
0008e9 93ba      	ST   -Y,R27
0008ea 93aa      	ST   -Y,R26
0008eb 9508      	RET
                 
                 __SWAPD12:
0008ec 2e18      	MOV  R1,R24
0008ed 2f86      	MOV  R24,R22
0008ee 2d61      	MOV  R22,R1
0008ef 2e19      	MOV  R1,R25
0008f0 2f97      	MOV  R25,R23
0008f1 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0008f2 2e1b      	MOV  R1,R27
0008f3 2fbf      	MOV  R27,R31
0008f4 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0008f5 2e1a      	MOV  R1,R26
0008f6 2fae      	MOV  R26,R30
0008f7 2de1      	MOV  R30,R1
0008f8 9508      	RET
                 
                 __CPD10:
0008f9 9730      	SBIW R30,0
0008fa 4060      	SBCI R22,0
0008fb 4070      	SBCI R23,0
0008fc 9508      	RET
                 
                 __SAVELOCR6:
0008fd 935a      	ST   -Y,R21
                 __SAVELOCR5:
0008fe 934a      	ST   -Y,R20
                 __SAVELOCR4:
0008ff 933a      	ST   -Y,R19
                 __SAVELOCR3:
000900 932a      	ST   -Y,R18
                 __SAVELOCR2:
000901 931a      	ST   -Y,R17
000902 930a      	ST   -Y,R16
000903 9508      	RET
                 
                 __LOADLOCR6:
000904 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000905 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000906 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000907 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000908 8119      	LDD  R17,Y+1
000909 8108      	LD   R16,Y
00090a 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  60 r1 :  34 r2 :   0 r3 :   0 r4 :   3 r5 :   0 r6 :   4 r7 :   4 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  50 r17:  60 r18:  48 r19:  35 r20:  50 r21:  90 r22: 109 r23:  94 
r24:  75 r25:  59 r26: 208 r27:  93 r28:  30 r29:   1 r30: 365 r31: 142 
x  :  40 y  : 368 z  :  24 
Registers used: 26 out of 35 (74.3%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  21 add   :  14 
adiw  :  32 and   :   5 andi  :   7 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  47 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  27 
brlt  :   2 brmi  :  11 brne  :  60 brpl  :   9 brsh  :   6 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 166 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  47 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  14 cpc   :  18 cpi   :  81 cpse  :   0 dec   :  18 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   4 inc   :   5 jmp   :  24 ld    :  51 ldd   : 191 ldi   : 197 
lds   :   0 lpm   :  12 lsl   :  14 lsr   :   3 mov   :  82 movw  :  53 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   1 
ori   :   9 out   :  12 pop   :  22 push  :  22 rcall :  81 ret   :  90 
reti  :   0 rjmp  : 135 rol   :  32 ror   :  15 sbc   :  11 sbci  :  20 
sbi   :   7 sbic  :   0 sbis  :   1 sbiw  :  27 sbr   :   4 sbrc  :   4 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  93 std   :  86 sts   :   2 sub   :   6 subi  :  48 swap  :   1 
tst   :  24 wdr   :   1 
Instructions used: 79 out of 116 (68.1%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001216   4576     54   4630   16384  28.3%
[.dseg] 0x000060 0x000172      0     18     18    1024   1.8%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 8 warnings
