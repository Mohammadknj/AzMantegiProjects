;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <alcd.h>
;int tenth=0,sec=0,Min=0,hour=0;
;interrupt [TIM0_COMP] void timer0_comp_isr(void)
; 0000 0006 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0007 char st[20];
; 0000 0008 tenth++;
;PCODE: $0000000F VOL: 0
;	st -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0009 if(tenth==100){sec++;tenth=0;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 000A   if(sec==60){Min++;sec=0;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 000B     if(Min==60){hour++;Min=0;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 000C         if(hour==24)hour=0;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 000D     }
;PCODE: $0000002C VOL: 0
; 0000 000E   }
;PCODE: $0000002D VOL: 0
; 0000 000F }
;PCODE: $0000002E VOL: 0
; 0000 0010 sprintf(st,"%02d:%02d:%02d:%02d",hour,Min,sec,tenth);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0011 lcd_gotoxy(0,0);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0012 lcd_puts(st);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0013 }
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;void main(void)
; 0000 0015 {
;PCODE: $0000004F VOL: 0
; 0000 0016 
; 0000 0017 // Timer/Counter 0 initialization
; 0000 0018 // Clock source: System Clock
; 0000 0019 // Clock value: 0.977 kHz
; 0000 001A // Mode: CTC top=OCR0
; 0000 001B // OC0 output: Toggle on compare match
; 0000 001C // Timer Period: 99.328 ms
; 0000 001D // Output Pulse(s):
; 0000 001E // OC0 Period: 0.19866 s Width: 99.328 ms
; 0000 001F TCCR0=(0<<WGM00) | (0<<COM01) | (1<<COM00) | (1<<WGM01) | (1<<CS02) | (0<<CS01) | (1<<CS00);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0020 TCNT0=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0021 OCR0=0x0A;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0022 
; 0000 0023 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0024 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (1<<OCIE0) | (0<<TOIE0);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0025 lcd_init(16);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0026 #asm("sei")
;PCODE: $0000005A VOL: 0
	sei
;PCODE: $0000005B VOL: 0
; 0000 0027 
; 0000 0028 while (1)
;PCODE: $0000005C VOL: 0
; 0000 0029       {
; 0000 002A 
; 0000 002B       }
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 002C }
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
