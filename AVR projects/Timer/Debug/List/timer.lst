
AVRASM ver. 2.1.30  C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\Timer\Debug\List\timer.asm Sat Mar 29 02:56:58 2025

C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\Timer\Debug\List\timer.asm(1088): warning: Register r4 already defined by the .DEF directive
C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\Timer\Debug\List\timer.asm(1089): warning: Register r5 already defined by the .DEF directive
C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\Timer\Debug\List\timer.asm(1090): warning: Register r6 already defined by the .DEF directive
C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\Timer\Debug\List\timer.asm(1091): warning: Register r7 already defined by the .DEF directive
C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\Timer\Debug\List\timer.asm(1092): warning: Register r8 already defined by the .DEF directive
C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\Timer\Debug\List\timer.asm(1093): warning: Register r9 already defined by the .DEF directive
C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\Timer\Debug\List\timer.asm(1094): warning: Register r10 already defined by the .DEF directive
C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\Timer\Debug\List\timer.asm(1095): warning: Register r11 already defined by the .DEF directive
C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\Timer\Debug\List\timer.asm(1096): warning: Register r13 already defined by the .DEF directive
C:\Users\Laptopkaran\OneDrive\Desktop\Az manteghi excersises\AVR projects\Timer\Debug\List\timer.asm(1097): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _tenth=R4
                 	.DEF _tenth_msb=R5
                 	.DEF _sec=R6
                 	.DEF _sec_msb=R7
                 	.DEF _Min=R8
                 	.DEF _Min_msb=R9
                 	.DEF _hour=R10
                 	.DEF _hour_msb=R11
                 	.DEF __lcd_x=R13
                 	.DEF __lcd_y=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0049 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0076 	JMP  _timer0_comp_isr
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000033 0000
000034 0000      	.DB  0x0,0x0,0x0,0x0
000035 0000
000036 0000      	.DB  0x0,0x0,0x0,0x0
                 
                 _0x0:
000037 3025
000038 6432
000039 253a
00003a 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
00003b 3a64
00003c 3025
00003d 6432
00003e 253a      	.DB  0x64,0x3A,0x25,0x30,0x32,0x64,0x3A,0x25
00003f 3230
000040 0064      	.DB  0x30,0x32,0x64,0x0
                 _0x2020003:
000041 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000042 0008      	.DW  0x08
000043 0004      	.DW  0x04
000044 0066      	.DW  __REG_VARS*2
                 
000045 0002      	.DW  0x02
000046 0160      	.DW  __base_y_G101
000047 0082      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
000048 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000049 94f8      	CLI
00004a 27ee      	CLR  R30
00004b bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004c e0f1      	LDI  R31,1
00004d bffb      	OUT  GICR,R31
00004e bfeb      	OUT  GICR,R30
00004f bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000050 e08d      	LDI  R24,(14-2)+1
000051 e0a2      	LDI  R26,2
000052 27bb      	CLR  R27
                 __CLEAR_REG:
000053 93ed      	ST   X+,R30
000054 958a      	DEC  R24
000055 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000056 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000057 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000058 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000059 93ed      	ST   X+,R30
00005a 9701      	SBIW R24,1
00005b f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005c e8e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005d e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005e 9185      	LPM  R24,Z+
00005f 9195      	LPM  R25,Z+
000060 9700      	SBIW R24,0
000061 f061      	BREQ __GLOBAL_INI_END
000062 91a5      	LPM  R26,Z+
000063 91b5      	LPM  R27,Z+
000064 9005      	LPM  R0,Z+
000065 9015      	LPM  R1,Z+
000066 01bf      	MOVW R22,R30
000067 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000068 9005      	LPM  R0,Z+
000069 920d      	ST   X+,R0
00006a 9701      	SBIW R24,1
00006b f7e1      	BRNE __GLOBAL_INI_LOOP
00006c 01fb      	MOVW R30,R22
00006d cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006e e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006f bfed      	OUT  SPL,R30
000070 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000071 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000072 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000073 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000074 940c 00da 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <alcd.h>
                 ;int tenth=0,sec=0,Min=0,hour=0;
                 ;interrupt [TIM0_COMP] void timer0_comp_isr(void)
                 ; 0000 0006 {
                 
                 	.CSEG
                 _timer0_comp_isr:
                 ; .FSTART _timer0_comp_isr
000076 920a      	ST   -Y,R0
000077 921a      	ST   -Y,R1
000078 92fa      	ST   -Y,R15
000079 936a      	ST   -Y,R22
00007a 937a      	ST   -Y,R23
00007b 938a      	ST   -Y,R24
00007c 939a      	ST   -Y,R25
00007d 93aa      	ST   -Y,R26
00007e 93ba      	ST   -Y,R27
00007f 93ea      	ST   -Y,R30
000080 93fa      	ST   -Y,R31
000081 b7ef      	IN   R30,SREG
000082 93ea      	ST   -Y,R30
                 ; 0000 0007 char st[20];
                 ; 0000 0008 tenth++;
000083 9764      	SBIW R28,20
                 ;	st -> Y+0
000084 01f2      	MOVW R30,R4
000085 9631      	ADIW R30,1
000086 012f      	MOVW R4,R30
                 ; 0000 0009 if(tenth==100){sec++;tenth=0;
000087 e6e4      	LDI  R30,LOW(100)
000088 e0f0      	LDI  R31,HIGH(100)
000089 15e4      	CP   R30,R4
00008a 05f5      	CPC  R31,R5
00008b f501      	BRNE _0x3
00008c 01f3      	MOVW R30,R6
00008d 9631      	ADIW R30,1
00008e 013f      	MOVW R6,R30
00008f 2444      	CLR  R4
000090 2455      	CLR  R5
                 ; 0000 000A   if(sec==60){Min++;sec=0;
000091 e3ec      	LDI  R30,LOW(60)
000092 e0f0      	LDI  R31,HIGH(60)
000093 15e6      	CP   R30,R6
000094 05f7      	CPC  R31,R7
000095 f4b1      	BRNE _0x4
000096 01f4      	MOVW R30,R8
000097 9631      	ADIW R30,1
000098 014f      	MOVW R8,R30
000099 2466      	CLR  R6
00009a 2477      	CLR  R7
                 ; 0000 000B     if(Min==60){hour++;Min=0;
00009b e3ec      	LDI  R30,LOW(60)
00009c e0f0      	LDI  R31,HIGH(60)
00009d 15e8      	CP   R30,R8
00009e 05f9      	CPC  R31,R9
00009f f461      	BRNE _0x5
0000a0 01f5      	MOVW R30,R10
0000a1 9631      	ADIW R30,1
0000a2 015f      	MOVW R10,R30
0000a3 2488      	CLR  R8
0000a4 2499      	CLR  R9
                 ; 0000 000C         if(hour==24)hour=0;
0000a5 e1e8      	LDI  R30,LOW(24)
0000a6 e0f0      	LDI  R31,HIGH(24)
0000a7 15ea      	CP   R30,R10
0000a8 05fb      	CPC  R31,R11
0000a9 f411      	BRNE _0x6
0000aa 24aa      	CLR  R10
0000ab 24bb      	CLR  R11
                 ; 0000 000D     }
                 _0x6:
                 ; 0000 000E   }
                 _0x5:
                 ; 0000 000F }
                 _0x4:
                 ; 0000 0010 sprintf(st,"%02d:%02d:%02d:%02d",hour,Min,sec,tenth);
                 _0x3:
0000ac 01fe      	MOVW R30,R28
0000ad 93fa      	ST   -Y,R31
0000ae 93ea      	ST   -Y,R30
                +
0000af e6ee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000b0 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000b1 93fa      	ST   -Y,R31
0000b2 93ea      	ST   -Y,R30
0000b3 01f5      	MOVW R30,R10
0000b4 940e 0338 	CALL SUBOPT_0x0
0000b6 01f4      	MOVW R30,R8
0000b7 940e 0338 	CALL SUBOPT_0x0
0000b9 01f3      	MOVW R30,R6
0000ba 940e 0338 	CALL SUBOPT_0x0
0000bc 01f2      	MOVW R30,R4
0000bd 940e 0338 	CALL SUBOPT_0x0
0000bf e180      	LDI  R24,16
0000c0 940e 025c 	CALL _sprintf
0000c2 9664      	ADIW R28,20
                 ; 0000 0011 lcd_gotoxy(0,0);
0000c3 e0e0      	LDI  R30,LOW(0)
0000c4 93ea      	ST   -Y,R30
0000c5 e0a0      	LDI  R26,LOW(0)
0000c6 940e 02b0 	CALL _lcd_gotoxy
                 ; 0000 0012 lcd_puts(st);
0000c8 01de      	MOVW R26,R28
0000c9 940e 02e0 	CALL _lcd_puts
                 ; 0000 0013 }
0000cb 9664      	ADIW R28,20
0000cc 91e9      	LD   R30,Y+
0000cd bfef      	OUT  SREG,R30
0000ce 91f9      	LD   R31,Y+
0000cf 91e9      	LD   R30,Y+
0000d0 91b9      	LD   R27,Y+
0000d1 91a9      	LD   R26,Y+
0000d2 9199      	LD   R25,Y+
0000d3 9189      	LD   R24,Y+
0000d4 9179      	LD   R23,Y+
0000d5 9169      	LD   R22,Y+
0000d6 90f9      	LD   R15,Y+
0000d7 9019      	LD   R1,Y+
0000d8 9009      	LD   R0,Y+
0000d9 9518      	RETI
                 ; .FEND
                 ;void main(void)
                 ; 0000 0015 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0016 
                 ; 0000 0017 // Timer/Counter 0 initialization
                 ; 0000 0018 // Clock source: System Clock
                 ; 0000 0019 // Clock value: 0.977 kHz
                 ; 0000 001A // Mode: CTC top=OCR0
                 ; 0000 001B // OC0 output: Toggle on compare match
                 ; 0000 001C // Timer Period: 99.328 ms
                 ; 0000 001D // Output Pulse(s):
                 ; 0000 001E // OC0 Period: 0.19866 s Width: 99.328 ms
                 ; 0000 001F TCCR0=(0<<WGM00) | (0<<COM01) | (1<<COM00) | (1<<WGM01) | (1<<CS02) | (0<<CS01) | (1<<CS00);
0000da e1ed      	LDI  R30,LOW(29)
0000db bfe3      	OUT  0x33,R30
                 ; 0000 0020 TCNT0=0x00;
0000dc e0e0      	LDI  R30,LOW(0)
0000dd bfe2      	OUT  0x32,R30
                 ; 0000 0021 OCR0=0x0A;
0000de e0ea      	LDI  R30,LOW(10)
0000df bfec      	OUT  0x3C,R30
                 ; 0000 0022 
                 ; 0000 0023 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0024 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (1<<OCIE0) | (0<<TOIE0);
0000e0 e0e2      	LDI  R30,LOW(2)
0000e1 bfe9      	OUT  0x39,R30
                 ; 0000 0025 lcd_init(16);
0000e2 e1a0      	LDI  R26,LOW(16)
0000e3 940e 02f1 	CALL _lcd_init
                 ; 0000 0026 #asm("sei")
0000e5 9478      	sei
                 ; 0000 0027 
                 ; 0000 0028 while (1)
                 _0x7:
                 ; 0000 0029       {
                 ; 0000 002A 
                 ; 0000 002B       }
0000e6 cfff      	RJMP _0x7
                 ; 0000 002C }
                 _0xA:
0000e7 cfff      	RJMP _0xA
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0000e8 93ba      	ST   -Y,R27
0000e9 93aa      	ST   -Y,R26
0000ea 931a      	ST   -Y,R17
0000eb 930a      	ST   -Y,R16
0000ec 81aa      	LDD  R26,Y+2
0000ed 81bb      	LDD  R27,Y+2+1
0000ee 9612      	ADIW R26,2
0000ef 940e 038d 	CALL __GETW1P
0000f1 9730      	SBIW R30,0
0000f2 f159      	BREQ _0x2000010
0000f3 81aa      	LDD  R26,Y+2
0000f4 81bb      	LDD  R27,Y+2+1
0000f5 9614      	ADIW R26,4
0000f6 940e 038d 	CALL __GETW1P
0000f8 018f      	MOVW R16,R30
0000f9 9730      	SBIW R30,0
0000fa f061      	BREQ _0x2000012
                +
0000fb 3002     +CPI R16 , LOW ( 2 )
0000fc e0e0     +LDI R30 , HIGH ( 2 )
0000fd 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0000fe f098      	BRLO _0x2000013
0000ff 01f8      	MOVW R30,R16
000100 9731      	SBIW R30,1
000101 018f      	MOVW R16,R30
                +
000102 81aa     +LDD R26 , Y + 2
000103 81bb     +LDD R27 , Y + 2 + 1
000104 9614     +ADIW R26 , 4
000105 93ed     +ST X + , R30
000106 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000107 81aa      	LDD  R26,Y+2
000108 81bb      	LDD  R27,Y+2+1
000109 9612      	ADIW R26,2
00010a 91ed      	LD   R30,X+
00010b 91fd      	LD   R31,X+
00010c 9631      	ADIW R30,1
00010d 93fe      	ST   -X,R31
00010e 93ee      	ST   -X,R30
00010f 9731      	SBIW R30,1
000110 81ac      	LDD  R26,Y+4
000111 83a0      	STD  Z+0,R26
                 _0x2000013:
000112 81aa      	LDD  R26,Y+2
000113 81bb      	LDD  R27,Y+2+1
000114 940e 038d 	CALL __GETW1P
000116 23ff      	TST  R31
000117 f02a      	BRMI _0x2000014
000118 91ed      	LD   R30,X+
000119 91fd      	LD   R31,X+
00011a 9631      	ADIW R30,1
00011b 93fe      	ST   -X,R31
00011c 93ee      	ST   -X,R30
                 _0x2000014:
00011d c006      	RJMP _0x2000015
                 _0x2000010:
00011e 81aa      	LDD  R26,Y+2
00011f 81bb      	LDD  R27,Y+2+1
000120 efef      	LDI  R30,LOW(65535)
000121 efff      	LDI  R31,HIGH(65535)
000122 93ed      	ST   X+,R30
000123 93fc      	ST   X,R31
                 _0x2000015:
000124 8119      	LDD  R17,Y+1
000125 8108      	LDD  R16,Y+0
000126 9625      	ADIW R28,5
000127 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000128 93ba      	ST   -Y,R27
000129 93aa      	ST   -Y,R26
00012a 9726      	SBIW R28,6
00012b 940e 039a 	CALL __SAVELOCR6
00012d e010      	LDI  R17,0
00012e 85ac      	LDD  R26,Y+12
00012f 85bd      	LDD  R27,Y+12+1
000130 e0e0      	LDI  R30,LOW(0)
000131 e0f0      	LDI  R31,HIGH(0)
000132 93ed      	ST   X+,R30
000133 93fc      	ST   X,R31
                 _0x2000016:
000134 89ea      	LDD  R30,Y+18
000135 89fb      	LDD  R31,Y+18+1
000136 9631      	ADIW R30,1
000137 8bea      	STD  Y+18,R30
000138 8bfb      	STD  Y+18+1,R31
000139 9731      	SBIW R30,1
00013a 91e4      	LPM  R30,Z
00013b 2f2e      	MOV  R18,R30
00013c 30e0      	CPI  R30,0
00013d f409      	BRNE PC+2
00013e c115      	RJMP _0x2000018
00013f 2fe1      	MOV  R30,R17
000140 30e0      	CPI  R30,0
000141 f439      	BRNE _0x200001C
000142 3225      	CPI  R18,37
000143 f411      	BRNE _0x200001D
000144 e011      	LDI  R17,LOW(1)
000145 c002      	RJMP _0x200001E
                 _0x200001D:
000146 940e 033d 	CALL SUBOPT_0x1
                 _0x200001E:
000148 c10a      	RJMP _0x200001B
                 _0x200001C:
000149 30e1      	CPI  R30,LOW(0x1)
00014a f4a9      	BRNE _0x200001F
00014b 3225      	CPI  R18,37
00014c f419      	BRNE _0x2000020
00014d 940e 033d 	CALL SUBOPT_0x1
00014f c102      	RJMP _0x20000CC
                 _0x2000020:
000150 e012      	LDI  R17,LOW(2)
000151 e040      	LDI  R20,LOW(0)
000152 e000      	LDI  R16,LOW(0)
000153 322d      	CPI  R18,45
000154 f411      	BRNE _0x2000021
000155 e001      	LDI  R16,LOW(1)
000156 c0fc      	RJMP _0x200001B
                 _0x2000021:
000157 322b      	CPI  R18,43
000158 f411      	BRNE _0x2000022
000159 e24b      	LDI  R20,LOW(43)
00015a c0f8      	RJMP _0x200001B
                 _0x2000022:
00015b 3220      	CPI  R18,32
00015c f411      	BRNE _0x2000023
00015d e240      	LDI  R20,LOW(32)
00015e c0f4      	RJMP _0x200001B
                 _0x2000023:
00015f c002      	RJMP _0x2000024
                 _0x200001F:
000160 30e2      	CPI  R30,LOW(0x2)
000161 f439      	BRNE _0x2000025
                 _0x2000024:
000162 e050      	LDI  R21,LOW(0)
000163 e013      	LDI  R17,LOW(3)
000164 3320      	CPI  R18,48
000165 f411      	BRNE _0x2000026
000166 6800      	ORI  R16,LOW(128)
000167 c0eb      	RJMP _0x200001B
                 _0x2000026:
000168 c003      	RJMP _0x2000027
                 _0x2000025:
000169 30e3      	CPI  R30,LOW(0x3)
00016a f009      	BREQ PC+2
00016b c0e7      	RJMP _0x200001B
                 _0x2000027:
00016c 3320      	CPI  R18,48
00016d f010      	BRLO _0x200002A
00016e 332a      	CPI  R18,58
00016f f008      	BRLO _0x200002B
                 _0x200002A:
000170 c007      	RJMP _0x2000029
                 _0x200002B:
000171 e0aa      	LDI  R26,LOW(10)
000172 9f5a      	MUL  R21,R26
000173 2d50      	MOV  R21,R0
000174 2fe2      	MOV  R30,R18
000175 53e0      	SUBI R30,LOW(48)
000176 0f5e      	ADD  R21,R30
000177 c0db      	RJMP _0x200001B
                 _0x2000029:
000178 2fe2      	MOV  R30,R18
000179 36e3      	CPI  R30,LOW(0x63)
00017a f449      	BRNE _0x200002F
00017b 940e 0344 	CALL SUBOPT_0x2
00017d 89e8      	LDD  R30,Y+16
00017e 89f9      	LDD  R31,Y+16+1
00017f 81a4      	LDD  R26,Z+4
000180 93aa      	ST   -Y,R26
000181 940e 034a 	CALL SUBOPT_0x3
000183 c0ce      	RJMP _0x2000030
                 _0x200002F:
000184 37e3      	CPI  R30,LOW(0x73)
000185 f441      	BRNE _0x2000032
000186 940e 0344 	CALL SUBOPT_0x2
000188 940e 0350 	CALL SUBOPT_0x4
00018a 940e 031f 	CALL _strlen
00018c 2f1e      	MOV  R17,R30
00018d c00a      	RJMP _0x2000033
                 _0x2000032:
00018e 37e0      	CPI  R30,LOW(0x70)
00018f f461      	BRNE _0x2000035
000190 940e 0344 	CALL SUBOPT_0x2
000192 940e 0350 	CALL SUBOPT_0x4
000194 940e 032b 	CALL _strlenf
000196 2f1e      	MOV  R17,R30
000197 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000198 6002      	ORI  R16,LOW(2)
000199 770f      	ANDI R16,LOW(127)
00019a e030      	LDI  R19,LOW(0)
00019b c034      	RJMP _0x2000036
                 _0x2000035:
00019c 36e4      	CPI  R30,LOW(0x64)
00019d f011      	BREQ _0x2000039
00019e 36e9      	CPI  R30,LOW(0x69)
00019f f411      	BRNE _0x200003A
                 _0x2000039:
0001a0 6004      	ORI  R16,LOW(4)
0001a1 c002      	RJMP _0x200003B
                 _0x200003A:
0001a2 37e5      	CPI  R30,LOW(0x75)
0001a3 f431      	BRNE _0x200003C
                 _0x200003B:
0001a4 e5e4      	LDI  R30,LOW(_tbl10_G100*2)
0001a5 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
0001a6 83ee      	STD  Y+6,R30
0001a7 83ff      	STD  Y+6+1,R31
0001a8 e015      	LDI  R17,LOW(5)
0001a9 c00c      	RJMP _0x200003D
                 _0x200003C:
0001aa 35e8      	CPI  R30,LOW(0x58)
0001ab f411      	BRNE _0x200003F
0001ac 6008      	ORI  R16,LOW(8)
0001ad c003      	RJMP _0x2000040
                 _0x200003F:
0001ae 37e8      	CPI  R30,LOW(0x78)
0001af f009      	BREQ PC+2
0001b0 c0a1      	RJMP _0x2000071
                 _0x2000040:
0001b1 e5ee      	LDI  R30,LOW(_tbl16_G100*2)
0001b2 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
0001b3 83ee      	STD  Y+6,R30
0001b4 83ff      	STD  Y+6+1,R31
0001b5 e014      	LDI  R17,LOW(4)
                 _0x200003D:
0001b6 ff02      	SBRS R16,2
0001b7 c014      	RJMP _0x2000042
0001b8 940e 0344 	CALL SUBOPT_0x2
0001ba 940e 035a 	CALL SUBOPT_0x5
0001bc 85ab      	LDD  R26,Y+11
0001bd 23aa      	TST  R26
0001be f43a      	BRPL _0x2000043
0001bf 85ea      	LDD  R30,Y+10
0001c0 85fb      	LDD  R31,Y+10+1
0001c1 940e 0384 	CALL __ANEGW1
0001c3 87ea      	STD  Y+10,R30
0001c4 87fb      	STD  Y+10+1,R31
0001c5 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
0001c6 3040      	CPI  R20,0
0001c7 f011      	BREQ _0x2000044
0001c8 5f1f      	SUBI R17,-LOW(1)
0001c9 c001      	RJMP _0x2000045
                 _0x2000044:
0001ca 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
0001cb c004      	RJMP _0x2000046
                 _0x2000042:
0001cc 940e 0344 	CALL SUBOPT_0x2
0001ce 940e 035a 	CALL SUBOPT_0x5
                 _0x2000046:
                 _0x2000036:
0001d0 fd00      	SBRC R16,0
0001d1 c011      	RJMP _0x2000047
                 _0x2000048:
0001d2 1715      	CP   R17,R21
0001d3 f478      	BRSH _0x200004A
0001d4 ff07      	SBRS R16,7
0001d5 c008      	RJMP _0x200004B
0001d6 ff02      	SBRS R16,2
0001d7 c004      	RJMP _0x200004C
0001d8 7f0b      	ANDI R16,LOW(251)
0001d9 2f24      	MOV  R18,R20
0001da 5011      	SUBI R17,LOW(1)
0001db c001      	RJMP _0x200004D
                 _0x200004C:
0001dc e320      	LDI  R18,LOW(48)
                 _0x200004D:
0001dd c001      	RJMP _0x200004E
                 _0x200004B:
0001de e220      	LDI  R18,LOW(32)
                 _0x200004E:
0001df 940e 033d 	CALL SUBOPT_0x1
0001e1 5051      	SUBI R21,LOW(1)
0001e2 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
0001e3 2f31      	MOV  R19,R17
0001e4 ff01      	SBRS R16,1
0001e5 c017      	RJMP _0x200004F
                 _0x2000050:
0001e6 3030      	CPI  R19,0
0001e7 f0a1      	BREQ _0x2000052
0001e8 ff03      	SBRS R16,3
0001e9 c006      	RJMP _0x2000053
0001ea 81ee      	LDD  R30,Y+6
0001eb 81ff      	LDD  R31,Y+6+1
0001ec 9125      	LPM  R18,Z+
0001ed 83ee      	STD  Y+6,R30
0001ee 83ff      	STD  Y+6+1,R31
0001ef c005      	RJMP _0x2000054
                 _0x2000053:
0001f0 81ae      	LDD  R26,Y+6
0001f1 81bf      	LDD  R27,Y+6+1
0001f2 912d      	LD   R18,X+
0001f3 83ae      	STD  Y+6,R26
0001f4 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0001f5 940e 033d 	CALL SUBOPT_0x1
0001f7 3050      	CPI  R21,0
0001f8 f009      	BREQ _0x2000055
0001f9 5051      	SUBI R21,LOW(1)
                 _0x2000055:
0001fa 5031      	SUBI R19,LOW(1)
0001fb cfea      	RJMP _0x2000050
                 _0x2000052:
0001fc c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
0001fd e320      	LDI  R18,LOW(48)
0001fe 81ee      	LDD  R30,Y+6
0001ff 81ff      	LDD  R31,Y+6+1
000200 940e 0391 	CALL __GETW1PF
000202 87e8      	STD  Y+8,R30
000203 87f9      	STD  Y+8+1,R31
000204 81ee      	LDD  R30,Y+6
000205 81ff      	LDD  R31,Y+6+1
000206 9632      	ADIW R30,2
000207 83ee      	STD  Y+6,R30
000208 83ff      	STD  Y+6+1,R31
                 _0x200005A:
000209 85e8      	LDD  R30,Y+8
00020a 85f9      	LDD  R31,Y+8+1
00020b 85aa      	LDD  R26,Y+10
00020c 85bb      	LDD  R27,Y+10+1
00020d 17ae      	CP   R26,R30
00020e 07bf      	CPC  R27,R31
00020f f050      	BRLO _0x200005C
000210 5f2f      	SUBI R18,-LOW(1)
000211 85a8      	LDD  R26,Y+8
000212 85b9      	LDD  R27,Y+8+1
000213 85ea      	LDD  R30,Y+10
000214 85fb      	LDD  R31,Y+10+1
000215 1bea      	SUB  R30,R26
000216 0bfb      	SBC  R31,R27
000217 87ea      	STD  Y+10,R30
000218 87fb      	STD  Y+10+1,R31
000219 cfef      	RJMP _0x200005A
                 _0x200005C:
00021a 332a      	CPI  R18,58
00021b f028      	BRLO _0x200005D
00021c ff03      	SBRS R16,3
00021d c002      	RJMP _0x200005E
00021e 5f29      	SUBI R18,-LOW(7)
00021f c001      	RJMP _0x200005F
                 _0x200005E:
000220 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
000221 fd04      	SBRC R16,4
000222 c01a      	RJMP _0x2000061
000223 3321      	CPI  R18,49
000224 f420      	BRSH _0x2000063
000225 85a8      	LDD  R26,Y+8
000226 85b9      	LDD  R27,Y+8+1
000227 9711      	SBIW R26,1
000228 f409      	BRNE _0x2000062
                 _0x2000063:
000229 c009      	RJMP _0x20000CD
                 _0x2000062:
00022a 1753      	CP   R21,R19
00022b f010      	BRLO _0x2000067
00022c ff00      	SBRS R16,0
00022d c001      	RJMP _0x2000068
                 _0x2000067:
00022e c013      	RJMP _0x2000066
                 _0x2000068:
00022f e220      	LDI  R18,LOW(32)
000230 ff07      	SBRS R16,7
000231 c00b      	RJMP _0x2000069
000232 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
000233 6100      	ORI  R16,LOW(16)
000234 ff02      	SBRS R16,2
000235 c007      	RJMP _0x200006A
000236 7f0b      	ANDI R16,LOW(251)
000237 934a      	ST   -Y,R20
000238 940e 034a 	CALL SUBOPT_0x3
00023a 3050      	CPI  R21,0
00023b f009      	BREQ _0x200006B
00023c 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
00023d 940e 033d 	CALL SUBOPT_0x1
00023f 3050      	CPI  R21,0
000240 f009      	BREQ _0x200006C
000241 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
000242 5031      	SUBI R19,LOW(1)
000243 85a8      	LDD  R26,Y+8
000244 85b9      	LDD  R27,Y+8+1
000245 9712      	SBIW R26,2
000246 f008      	BRLO _0x2000059
000247 cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
000248 ff00      	SBRS R16,0
000249 c008      	RJMP _0x200006D
                 _0x200006E:
00024a 3050      	CPI  R21,0
00024b f031      	BREQ _0x2000070
00024c 5051      	SUBI R21,LOW(1)
00024d e2e0      	LDI  R30,LOW(32)
00024e 93ea      	ST   -Y,R30
00024f 940e 034a 	CALL SUBOPT_0x3
000251 cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
000252 e010      	LDI  R17,LOW(0)
                 _0x200001B:
000253 cee0      	RJMP _0x2000016
                 _0x2000018:
000254 85ac      	LDD  R26,Y+12
000255 85bd      	LDD  R27,Y+12+1
000256 940e 038d 	CALL __GETW1P
000258 940e 03a1 	CALL __LOADLOCR6
00025a 9664      	ADIW R28,20
00025b 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00025c 92ff      	PUSH R15
00025d 2ef8      	MOV  R15,R24
00025e 9726      	SBIW R28,6
00025f 940e 039c 	CALL __SAVELOCR4
000261 940e 0362 	CALL SUBOPT_0x6
000263 9730      	SBIW R30,0
000264 f419      	BRNE _0x2000072
000265 efef      	LDI  R30,LOW(65535)
000266 efff      	LDI  R31,HIGH(65535)
000267 c023      	RJMP _0x2080002
                 _0x2000072:
000268 01de      	MOVW R26,R28
000269 9616      	ADIW R26,6
00026a 940e 0380 	CALL __ADDW2R15
00026c 018d      	MOVW R16,R26
00026d 940e 0362 	CALL SUBOPT_0x6
00026f 83ee      	STD  Y+6,R30
000270 83ff      	STD  Y+6+1,R31
000271 e0e0      	LDI  R30,LOW(0)
000272 87e8      	STD  Y+8,R30
000273 87e9      	STD  Y+8+1,R30
000274 01de      	MOVW R26,R28
000275 961a      	ADIW R26,10
000276 940e 0380 	CALL __ADDW2R15
000278 940e 038d 	CALL __GETW1P
00027a 93fa      	ST   -Y,R31
00027b 93ea      	ST   -Y,R30
00027c 931a      	ST   -Y,R17
00027d 930a      	ST   -Y,R16
00027e eee8      	LDI  R30,LOW(_put_buff_G100)
00027f e0f0      	LDI  R31,HIGH(_put_buff_G100)
000280 93fa      	ST   -Y,R31
000281 93ea      	ST   -Y,R30
000282 01de      	MOVW R26,R28
000283 961a      	ADIW R26,10
000284 dea3      	RCALL __print_G100
000285 019f      	MOVW R18,R30
000286 81ae      	LDD  R26,Y+6
000287 81bf      	LDD  R27,Y+6+1
000288 e0e0      	LDI  R30,LOW(0)
000289 93ec      	ST   X,R30
00028a 01f9      	MOVW R30,R18
                 _0x2080002:
00028b 940e 03a3 	CALL __LOADLOCR4
00028d 962a      	ADIW R28,10
00028e 90ff      	POP  R15
00028f 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
000290 93aa      	ST   -Y,R26
000291 b3eb      	IN   R30,0x1B
000292 70ef      	ANDI R30,LOW(0xF)
000293 2fae      	MOV  R26,R30
000294 81e8      	LD   R30,Y
000295 7fe0      	ANDI R30,LOW(0xF0)
000296 2bea      	OR   R30,R26
000297 bbeb      	OUT  0x1B,R30
                +
000298 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000299 958a     +DEC R24
00029a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
00029b 9ada      	SBI  0x1B,2
                +
00029c e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
00029d 958a     +DEC R24
00029e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
00029f 98da      	CBI  0x1B,2
                +
0002a0 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0002a1 958a     +DEC R24
0002a2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0002a3 c079      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0002a4 93aa      	ST   -Y,R26
0002a5 81a8      	LD   R26,Y
0002a6 dfe9      	RCALL __lcd_write_nibble_G101
0002a7 81e8          ld    r30,y
0002a8 95e2          swap  r30
0002a9 83e8          st    y,r30
0002aa 81a8      	LD   R26,Y
0002ab dfe4      	RCALL __lcd_write_nibble_G101
                +
0002ac e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
0002ad 958a     +DEC R24
0002ae f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
0002af c06d      	RJMP _0x2080001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0002b0 93aa      	ST   -Y,R26
0002b1 81e8      	LD   R30,Y
0002b2 e0f0      	LDI  R31,0
0002b3 5ae0      	SUBI R30,LOW(-__base_y_G101)
0002b4 4ffe      	SBCI R31,HIGH(-__base_y_G101)
0002b5 81e0      	LD   R30,Z
0002b6 81a9      	LDD  R26,Y+1
0002b7 0fae      	ADD  R26,R30
0002b8 dfeb      	RCALL __lcd_write_data
0002b9 80d9      	LDD  R13,Y+1
0002ba 80c8      	LDD  R12,Y+0
0002bb 9622      	ADIW R28,2
0002bc 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0002bd e0a2      	LDI  R26,LOW(2)
0002be 940e 0369 	CALL SUBOPT_0x7
0002c0 e0ac      	LDI  R26,LOW(12)
0002c1 dfe2      	RCALL __lcd_write_data
0002c2 e0a1      	LDI  R26,LOW(1)
0002c3 940e 0369 	CALL SUBOPT_0x7
0002c5 e0e0      	LDI  R30,LOW(0)
0002c6 2ece      	MOV  R12,R30
0002c7 2ede      	MOV  R13,R30
0002c8 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0002c9 93aa      	ST   -Y,R26
0002ca 81a8      	LD   R26,Y
0002cb 30aa      	CPI  R26,LOW(0xA)
0002cc f021      	BREQ _0x2020005
0002cd 91e0 0164 	LDS  R30,__lcd_maxx
0002cf 16de      	CP   R13,R30
0002d0 f048      	BRLO _0x2020004
                 _0x2020005:
0002d1 e0e0      	LDI  R30,LOW(0)
0002d2 93ea      	ST   -Y,R30
0002d3 94c3      	INC  R12
0002d4 2dac      	MOV  R26,R12
0002d5 dfda      	RCALL _lcd_gotoxy
0002d6 81a8      	LD   R26,Y
0002d7 30aa      	CPI  R26,LOW(0xA)
0002d8 f409      	BRNE _0x2020007
0002d9 c043      	RJMP _0x2080001
                 _0x2020007:
                 _0x2020004:
0002da 94d3      	INC  R13
0002db 9ad8      	SBI  0x1B,0
0002dc 81a8      	LD   R26,Y
0002dd dfc6      	RCALL __lcd_write_data
0002de 98d8      	CBI  0x1B,0
0002df c03d      	RJMP _0x2080001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0002e0 93ba      	ST   -Y,R27
0002e1 93aa      	ST   -Y,R26
0002e2 931a      	ST   -Y,R17
                 _0x2020008:
0002e3 81a9      	LDD  R26,Y+1
0002e4 81ba      	LDD  R27,Y+1+1
0002e5 91ed      	LD   R30,X+
0002e6 83a9      	STD  Y+1,R26
0002e7 83ba      	STD  Y+1+1,R27
0002e8 2f1e      	MOV  R17,R30
0002e9 30e0      	CPI  R30,0
0002ea f019      	BREQ _0x202000A
0002eb 2fa1      	MOV  R26,R17
0002ec dfdc      	RCALL _lcd_putchar
0002ed cff5      	RJMP _0x2020008
                 _0x202000A:
0002ee 8118      	LDD  R17,Y+0
0002ef 9623      	ADIW R28,3
0002f0 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0002f1 93aa      	ST   -Y,R26
0002f2 b3ea      	IN   R30,0x1A
0002f3 6fe0      	ORI  R30,LOW(0xF0)
0002f4 bbea      	OUT  0x1A,R30
0002f5 9ad2      	SBI  0x1A,2
0002f6 9ad0      	SBI  0x1A,0
0002f7 9ad1      	SBI  0x1A,1
0002f8 98da      	CBI  0x1B,2
0002f9 98d8      	CBI  0x1B,0
0002fa 98d9      	CBI  0x1B,1
0002fb 81e8      	LD   R30,Y
0002fc 93e0 0164 	STS  __lcd_maxx,R30
0002fe 58e0      	SUBI R30,-LOW(128)
                +
0002ff 93e0 0162+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
000301 81e8      	LD   R30,Y
000302 54e0      	SUBI R30,-LOW(192)
                +
000303 93e0 0163+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
000305 e1a4      	LDI  R26,LOW(20)
000306 e0b0      	LDI  R27,0
000307 940e 0376 	CALL _delay_ms
000309 940e 036f 	CALL SUBOPT_0x8
00030b 940e 036f 	CALL SUBOPT_0x8
00030d 940e 036f 	CALL SUBOPT_0x8
00030f e2a0      	LDI  R26,LOW(32)
000310 df7f      	RCALL __lcd_write_nibble_G101
                +
000311 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000312 958a     +DEC R24
000313 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000314 e2a8      	LDI  R26,LOW(40)
000315 df8e      	RCALL __lcd_write_data
000316 e0a4      	LDI  R26,LOW(4)
000317 df8c      	RCALL __lcd_write_data
000318 e8a5      	LDI  R26,LOW(133)
000319 df8a      	RCALL __lcd_write_data
00031a e0a6      	LDI  R26,LOW(6)
00031b df88      	RCALL __lcd_write_data
00031c dfa0      	RCALL _lcd_clear
                 _0x2080001:
00031d 9621      	ADIW R28,1
00031e 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00031f 93ba      	ST   -Y,R27
000320 93aa      	ST   -Y,R26
000321 91a9          ld   r26,y+
000322 91b9          ld   r27,y+
000323 27ee          clr  r30
000324 27ff          clr  r31
                 strlen0:
000325 916d          ld   r22,x+
000326 2366          tst  r22
000327 f011          breq strlen1
000328 9631          adiw r30,1
000329 cffb          rjmp strlen0
                 strlen1:
00032a 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00032b 93ba      	ST   -Y,R27
00032c 93aa      	ST   -Y,R26
00032d 27aa          clr  r26
00032e 27bb          clr  r27
00032f 91e9          ld   r30,y+
000330 91f9          ld   r31,y+
                 strlenf0:
000331 9005      	lpm  r0,z+
000332 2000          tst  r0
000333 f011          breq strlenf1
000334 9611          adiw r26,1
000335 cffb          rjmp strlenf0
                 strlenf1:
000336 01fd          movw r30,r26
000337 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __base_y_G101:
000160           	.BYTE 0x4
                 __lcd_maxx:
000164           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000338 940e 0388 	CALL __CWD1
00033a 940e 0395 	CALL __PUTPARD1
00033c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1:
00033d 932a      	ST   -Y,R18
00033e 85ad      	LDD  R26,Y+13
00033f 85be      	LDD  R27,Y+13+1
000340 85ef      	LDD  R30,Y+15
000341 89f8      	LDD  R31,Y+15+1
000342 9509      	ICALL
000343 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2:
000344 89e8      	LDD  R30,Y+16
000345 89f9      	LDD  R31,Y+16+1
000346 9734      	SBIW R30,4
000347 8be8      	STD  Y+16,R30
000348 8bf9      	STD  Y+16+1,R31
000349 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
00034a 85ad      	LDD  R26,Y+13
00034b 85be      	LDD  R27,Y+13+1
00034c 85ef      	LDD  R30,Y+15
00034d 89f8      	LDD  R31,Y+15+1
00034e 9509      	ICALL
00034f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
000350 89a8      	LDD  R26,Y+16
000351 89b9      	LDD  R27,Y+16+1
000352 9614      	ADIW R26,4
000353 940e 038d 	CALL __GETW1P
000355 83ee      	STD  Y+6,R30
000356 83ff      	STD  Y+6+1,R31
000357 81ae      	LDD  R26,Y+6
000358 81bf      	LDD  R27,Y+6+1
000359 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
00035a 89a8      	LDD  R26,Y+16
00035b 89b9      	LDD  R27,Y+16+1
00035c 9614      	ADIW R26,4
00035d 940e 038d 	CALL __GETW1P
00035f 87ea      	STD  Y+10,R30
000360 87fb      	STD  Y+10+1,R31
000361 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000362 01de      	MOVW R26,R28
000363 961c      	ADIW R26,12
000364 940e 0380 	CALL __ADDW2R15
000366 940e 038d 	CALL __GETW1P
000368 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000369 940e 02a4 	CALL __lcd_write_data
00036b e0a3      	LDI  R26,LOW(3)
00036c e0b0      	LDI  R27,0
00036d 940c 0376 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
00036f e3a0      	LDI  R26,LOW(48)
000370 940e 0290 	CALL __lcd_write_nibble_G101
                +
000372 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000373 958a     +DEC R24
000374 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000375 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000376 9610      	adiw r26,0
000377 f039      	breq __delay_ms1
                 __delay_ms0:
000378 95a8      	wdr
                +
000379 ef8a     +LDI R24 , LOW ( 0xFA )
00037a e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
00037b 9701     +SBIW R24 , 1
00037c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
00037d 9711      	sbiw r26,1
00037e f7c9      	brne __delay_ms0
                 __delay_ms1:
00037f 9508      	ret
                 
                 __ADDW2R15:
000380 2400      	CLR  R0
000381 0daf      	ADD  R26,R15
000382 1db0      	ADC  R27,R0
000383 9508      	RET
                 
                 __ANEGW1:
000384 95f1      	NEG  R31
000385 95e1      	NEG  R30
000386 40f0      	SBCI R31,0
000387 9508      	RET
                 
                 __CWD1:
000388 2f6f      	MOV  R22,R31
000389 0f66      	ADD  R22,R22
00038a 0b66      	SBC  R22,R22
00038b 2f76      	MOV  R23,R22
00038c 9508      	RET
                 
                 __GETW1P:
00038d 91ed      	LD   R30,X+
00038e 91fc      	LD   R31,X
00038f 9711      	SBIW R26,1
000390 9508      	RET
                 
                 __GETW1PF:
000391 9005      	LPM  R0,Z+
000392 91f4      	LPM  R31,Z
000393 2de0      	MOV  R30,R0
000394 9508      	RET
                 
                 __PUTPARD1:
000395 937a      	ST   -Y,R23
000396 936a      	ST   -Y,R22
000397 93fa      	ST   -Y,R31
000398 93ea      	ST   -Y,R30
000399 9508      	RET
                 
                 __SAVELOCR6:
00039a 935a      	ST   -Y,R21
                 __SAVELOCR5:
00039b 934a      	ST   -Y,R20
                 __SAVELOCR4:
00039c 933a      	ST   -Y,R19
                 __SAVELOCR3:
00039d 932a      	ST   -Y,R18
                 __SAVELOCR2:
00039e 931a      	ST   -Y,R17
00039f 930a      	ST   -Y,R16
0003a0 9508      	RET
                 
                 __LOADLOCR6:
0003a1 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003a2 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003a3 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003a4 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0003a5 8119      	LDD  R17,Y+1
0003a6 8108      	LD   R16,Y
0003a7 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  13 r1 :   3 r2 :   0 r3 :   0 r4 :   5 r5 :   2 r6 :   5 r7 :   2 
r8 :   5 r9 :   2 r10:   5 r11:   2 r12:   4 r13:   4 r14:   0 r15:   6 
r16:  34 r17:  24 r18:  29 r19:   8 r20:   9 r21:  17 r22:  13 r23:   4 
r24:  25 r25:   5 r26:  99 r27:  38 r28:  18 r29:   1 r30: 187 r31:  67 
x  :  23 y  : 189 z  :  15 
Registers used: 32 out of 35 (91.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   4 
adiw  :  29 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  17 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  34 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  56 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  15 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   8 cpc   :   6 cpi   :  33 cpse  :   0 dec   :   7 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   3 inc   :   2 jmp   :  23 ld    :  37 ldd   :  76 ldi   :  91 
lds   :   1 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  19 movw  :  28 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :  13 pop   :   1 push  :   1 rcall :  14 ret   :  26 
reti  :   1 rjmp  :  59 rol   :   0 ror   :   0 sbc   :   2 sbci  :   2 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  18 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  71 std   :  31 sts   :   3 sub   :   1 subi  :  16 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 55 out of 116 (47.4%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000750   1810     62   1872   16384  11.4%
[.dseg] 0x000060 0x000165      0      5      5    1024   0.5%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 10 warnings
